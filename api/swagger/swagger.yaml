swagger: "2.0"
info:
  version: "1.5"
  title: SiB Colombia - Catalogue API
  description: API for SiB Colombia Catalogue. This API is used as a backend for consult the information of the species records reported in the SiB Colombia.
  termsOfService: http://swagger.io/terms/
  contact:
    name: SiB Colombia Developer Team
    url: http://www.sibcolombia.net
    email: oduque@humboldt.org.co
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths
basePath: /api/v1.5
tags:
  - name: record
    description: This API works against the SiB Colombia Records data store, which store all species records registered through Mamut editor.
  - name: taxonRecordName
    description: A operation related with the element TaxonRecordName
  - name: AssociatedParty
    description: A operation related with the element AssociatedParty
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /list/:
    x-swagger-router-controller: records
    get:
      description: get a list of records
      tags:
        - record
      operationId: getRecordList
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Record"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /record/{id}:
    x-swagger-router-controller: records
    get:
      description: get the latest version of a record
      tags:
        - record
      operationId: lastRecord
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Record"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /record-info/{id}:
    x-swagger-router-controller: records
    get:
      description: get the latest version of a record
      tags:
        - record
      operationId: lastRecordTest
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Record"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /complete-record/{id}:
    x-swagger-router-controller: records
    get:
      description: get the latest version of a record
      tags:
        - record
      operationId: completeLastRecordTest
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Record"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /record:
    x-swagger-router-controller: taxonRecordName
    post:
      description: Creates a new  Record with a taxonRecordNameVersion, that is the fisrt element and version of the created record.
      tags:
        - record
      operationId: postRecord
      parameters:
        - name: taxonRecordNameVersion
          description: taxonRecordNameVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/TaxonRecordNameVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /record/{id}/taxon_record_name/{version}:
    x-swagger-router-controller: taxonRecordName
    get: 
      description: Returns a taxonRecordNameVersion by Record id and number of version
      tags:
        - taxonRecordName
      operationId: getTaxonRecordName
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TaxonRecordNameVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /record/to_review/{id}/taxon_record_name:
    x-swagger-router-controller: taxonRecordName
    get: 
      description: Returns a list of TaxonRecordNameVersion with state "to_review"
      tags:
        - taxonRecordName
      operationId: getToReviewTaxonRecordName
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TaxonRecordNameVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /record/approved_in_use/{id}/taxon_record_name:
    x-swagger-router-controller: taxonRecordName
    get: 
      description: Returns the taxonRecordNameVersion approved_in_use 
      tags:
        - taxonRecordName
      operationId: getLastApprovedInUseTaxonRecordName
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TaxonRecordNameVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /record/approved_in_use/{id}/taxon_record_name/{version}:
    x-swagger-router-controller: taxonRecordName
    put: 
      description: Update a TaxonRecordNameVersion state to approved_in_use
      tags:
        - taxonRecordName
      operationId: setApprovedInUseTaxonRecordName
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /record/{id}/taxon_record_name:
    x-swagger-router-controller: taxonRecordName
    post:
      description: Save a new taxonRecordNameVersion related with the a record with the id
      tags:
        - taxonRecordName
      operationId: postTaxonRecordName
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: taxonRecordNameVersion
          description: taxonRecordNameVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/TaxonRecordNameVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/test/{id}/taxon_record_name:
    x-swagger-router-controller: taxonRecordName
    post:
      description: Save a new taxonRecordNameVersion related with the record with the id
      tags:
        - taxonRecordName
      operationId: postTestTaxonRecordName
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: taxonRecordNameVersion
          description: taxonRecordNameVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/TaxonRecordNameVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/test/approved_in_use/{id}/taxon_record_name:
    x-swagger-router-controller: taxonRecordName
    get: 
      description: Returns the taxonRecordNameVersion approved_in_use 
      tags:
        - taxonRecordName
      operationId: getLastApprovedInUseTaxonRecordNameTest
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TaxonRecordNameVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/test/message/{name}:
    x-swagger-router-controller: taxonRecordName
    get:
      description: to test controller
      tags:
        - Test
      operationId: returnNameMessage
      parameters:
        - name: name
          type: string
          description: name to test
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/associated_party/{version}:
    x-swagger-router-controller: associatedParty
    get: 
      description: Returns a AssociatedPartyVersion by record_id and number of version
      tags:
        - AssociatedParty
      operationId: getAssociatedParty
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AssociatedPartyVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/associated_party:
    x-swagger-router-controller: associatedParty
    post:
      description: Save a new AssociatedPartyVersion related that belongs to the record with id
      tags:
        - AssociatedParty
      operationId: postAssociatedParty
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: associatedPartyVersion
          description: associatedPartyVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociatedPartyVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/associated_party:
    x-swagger-router-controller: associatedParty
    get: 
      description: Returns a list of AssociatedPartyVersion with state "to_review"
      tags:
        - AssociatedParty
      operationId: getToReviewAssociatedParty
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AssociatedPartyVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/associated_party:
    x-swagger-router-controller: associatedParty
    get: 
      description: Returns the associatedParty version approved_in_use #**
      tags:
        - AssociatedParty
      operationId: getLastApprovedInUseAssociatedParty
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AssociatedPartyVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/associated_party/{version}:
    x-swagger-router-controller: associatedParty
    put: 
      description: Update a AssociatedPartyVersion state to approved_in_use
      tags:
        - AssociatedParty
      operationId: setApprovedInUseAssociatedParty
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

            
  /records/{id}/common_names_atomized/{version}:
    x-swagger-router-controller: commonNamesAtomized
    get: 
      description: Returns a CommonNamesAtomizedVersion by record id and version
      tags:
        - CommonNamesAtomized
      operationId: getCommonNamesAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CommonNamesAtomizedVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/common_names_atomized:
    x-swagger-router-controller: commonNamesAtomized
    post:
      description: Save a new CommonNamesAtomizedVersion that belongs to the record with id
      tags:
        - CommonNamesAtomized
      operationId: postCommonNamesAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: commonNamesAtomizedVersion
          description: commonNamesAtomizedVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/CommonNamesAtomizedVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/common_names_atomized:
    x-swagger-router-controller: commonNamesAtomized
    get: 
      description: Returns a list of CommonNamesAtomized version with state "to_review"
      tags:
        - CommonNamesAtomized
      operationId: getToReviewCommonNamesAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CommonNamesAtomizedVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/common_names_atomized:
    x-swagger-router-controller: commonNamesAtomized
    get: 
      description: Returns the commonNamesAtomized version approved_in_use #**
      tags:
        - CommonNamesAtomized
      operationId: getLastApprovedInUseCommonNamesAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CommonNamesAtomizedVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/common_names_atomized/{version}:
    x-swagger-router-controller: commonNamesAtomized
    put: 
      description: Update a CommonNamesAtomizedVersion state to approved_in_use
      tags:
        - CommonNamesAtomized
      operationId: setApprovedInUseCommonNamesAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/{id}/synonyms_atomized/{version}:
    x-swagger-router-controller: synonymsAtomized
    get: 
      description: Returns a SynonymsAtomizedVersion by record_id and number of version
      tags:
        - SynonymsAtomized
      operationId: getSynonymsAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SynonymsAtomizedVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/synonyms_atomized:
    x-swagger-router-controller: synonymsAtomized
    post:
      description: Save a new SynonymsAtomizedVersion that belongs to the record with the id in the route
      tags:
        - SynonymsAtomized
      operationId: postSynonymsAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: synonymsAtomizedVersion
          description: synonymsAtomizedVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/SynonymsAtomizedVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
            
  /records/to_review/{id}/synonyms_atomized:
    x-swagger-router-controller: synonymsAtomized
    get: 
      description: Returns a list of SynonymsAtomizedVersion with state "to_review"
      tags:
        - SynonymsAtomized
      operationId: getToReviewSynonymsAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SynonymsAtomizedVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/synonyms_atomized:
    x-swagger-router-controller: synonymsAtomized
    get: 
      description: Returns the synonymsAtomizedVersion with state "approved_in_use"
      tags:
        - SynonymsAtomized
      operationId: getLastApprovedInUseSynonymsAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SynonymsAtomizedVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/synonyms_atomized/{version}:
    x-swagger-router-controller: synonymsAtomized
    put: 
      description: Update a SynonymsAtomizedVersion state to "approved_in_use"
      tags:
        - SynonymsAtomized
      operationId: setApprovedInUseSynonymsAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/life_cycle/{version}:
    x-swagger-router-controller: lifeCycle
    get: 
      description: Returns a LifeCycleVersion by id_rcord and number of version
      tags:
        - LifeCycle
      operationId: getLifeCycle
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LifeCycleVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/life_cycle:
    x-swagger-router-controller: lifeCycle
    post:
      description: Save a new LifeCycleVersion that belongs to the record with the id in the route
      tags:
        - LifeCycle
      operationId: postLifeCycle
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: lifeCycleVersion
          description: lifeCycleVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/LifeCycleVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
            
  /records/to_review/{id}/life_cycle:
    x-swagger-router-controller: lifeCycle
    get: 
      description: Returns a list of LifeCycleVersion with state "to_review"
      tags:
        - LifeCycle
      operationId: getToReviewLifeCycle
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LifeCycleVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/life_cycle:
    x-swagger-router-controller: lifeCycle
    get: 
      description: Returns the lifeCycleVersion with state "approved_in_use"
      tags:
        - LifeCycle
      operationId: getLastApprovedInUseLifeCycle
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LifeCycleVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/life_cycle/{version}:
    x-swagger-router-controller: lifeCycle
    put: 
      description: Update a LifeCycleVersion state to approved_in_use
      tags:
        - LifeCycle
      operationId: setApprovedInUseLifeCycle
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/life_form/{version}:
    x-swagger-router-controller: lifeForm
    get: 
      description: Returns a LifeFormVersion by id_record and number of version
      tags:
        - LifeForm
      operationId: getLifeForm
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LifeFormVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/life_form:
    x-swagger-router-controller: lifeForm
    post:
      description: Save a new LifeFormVersion that belongs to the record with the id in the route
      tags:
        - LifeForm
      operationId: postLifeForm
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: lifeFormVersion
          description: lifeFormVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/LifeFormVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/life_form:
    x-swagger-router-controller: lifeForm
    get: 
      description: Returns a list of LifeFormVersion with state "to_review"
      tags:
        - LifeForm
      operationId: getToReviewLifeForm
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LifeFormVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/life_form:
    x-swagger-router-controller: lifeForm
    get: 
      description: Returns the lifeFormVersion with state "approved_in_use"
      tags:
        - LifeForm
      operationId: getLastApprovedInUseLifeForm
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LifeFormVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/life_form/{version}:
    x-swagger-router-controller: lifeForm
    put: 
      description: Update a LifeFormVersion state to "approved_in_use"
      tags:
        - LifeForm
      operationId: setApprovedInUseLifeForm
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/identification_keys/{version}:
    x-swagger-router-controller: identificationKeys
    get: 
      description: Returns a IdentificationKeysVersion by id_record and number of version
      tags:
        - IdentificationKeys
      operationId: getIdentificationKeys
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/IdentificationKeysVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/identification_keys:
    x-swagger-router-controller: identificationKeys
    post:
      description: Save a new IdentificationKeysVersion that belongs to the record with the id in the route
      tags:
        - IdentificationKeys
      operationId: postIdentificationKeys
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: identificationKeysVersion
          description: identificationKeysVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/IdentificationKeysVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"     
            
  /records/to_review/{id}/identification_keys:
    x-swagger-router-controller: identificationKeys
    get: 
      description: Returns a list of IdentificationKeysVersion with state "to_review"
      tags:
        - IdentificationKeys
      operationId: getToReviewIdentificationKeys
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/IdentificationKeysVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/identification_keys:
    x-swagger-router-controller: identificationKeys
    get: 
      description: Returns the identificationKeysVersion with state "approved_in_use"
      tags:
        - IdentificationKeys
      operationId: getLastApprovedInUseIdentificationKeys
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/IdentificationKeysVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/identification_keys/{version}:
    x-swagger-router-controller: identificationKeys
    put: 
      description: Update a IdentificationKeysVersion state to "approved_in_use"
      tags:
        - IdentificationKeys
      operationId: setApprovedInUseIdentificationKeys
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /records/{id}/full_description/{version}:
    x-swagger-router-controller: fullDescription
    get: 
      description: Returns a FullDescriptionVersion by id_record and number of version
      tags:
        - FullDescription
      operationId: getFullDescription
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FullDescriptionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/full_description:
    x-swagger-router-controller: fullDescription
    post:
      description: Save a new  FullDescriptionVersion that belongs to the record with the id in the route
      tags:
        - FullDescription
      operationId: postFullDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: fullDescriptionVersion
          description: fullDescriptionVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/FullDescriptionVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
            
  /records/to_review/{id}/full_description:
    x-swagger-router-controller: fullDescription
    get: 
      description: Returns a list of FullDescriptionVersion with state "to_review"
      tags:
        - FullDescription
      operationId: getToReviewFullDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FullDescriptionVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/full_description:
    x-swagger-router-controller: fullDescription
    get: 
      description: Returns the FullDescriptionVersion with state "approved_in_use"
      tags:
        - FullDescription
      operationId: getLastApprovedInUseFullDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FullDescriptionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/full_description/{version}:
    x-swagger-router-controller: fullDescription
    put: 
      description: Update a FullDescriptionVersion state to "approved_in_use"
      tags:
        - FullDescription
      operationId: setApprovedInUseFullDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
            
  /records/{id}/abstract/{version}:
    x-swagger-router-controller: abstract
    get: 
      description: Returns a AbstractVersion by id_record and number of version
      tags:
        - Abstract
      operationId: getAbstract
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AbstractVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/abstract:
    x-swagger-router-controller: abstract
    post:
      description: Save a new AbstractVersion that belongs to the record with the id in the route
      tags:
        - Abstract
      operationId: postAbstract
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: abstractVersion
          description: abstractVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/AbstractVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
            
  /records/to_review/{id}/abstract:
    x-swagger-router-controller: abstract
    get: 
      description: Returns a list of AbstractVersion with state "to_review"
      tags:
        - Abstract
      operationId: getToReviewAbstract
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AbstractVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/abstract:
    x-swagger-router-controller: abstract
    get: 
      description: Returns the AbstractVersion with state "approved_in_use"
      tags:
        - Abstract
      operationId: getLastApprovedInUseAbstract
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AbstractVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/abstract/{version}:
    x-swagger-router-controller: abstract
    put: 
      description: Update a AbstractVersion state to "approved_in_use"
      tags:
        - Abstract
      operationId: setApprovedInUseAbstract
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/hierarchy/{version}:
    x-swagger-router-controller: hierarchy
    get: 
      description: Returns a HierarchyVersion element by record id and version
      tags:
        - Hierarchy
      operationId: getHierarchy
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HierarchyVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/hierarchy:
    x-swagger-router-controller: hierarchy
    post:
      description: Save a new HierarchyVersion that belongs to the record with the id in the route
      tags:
        - Hierarchy
      operationId: postHierarchy
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: hierarchyVersion
          description: hierarchyVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/HierarchyVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/hierarchy:
    x-swagger-router-controller: hierarchy
    get: 
      description: Returns a list of HierarchyVersion with state "to_review"
      tags:
        - Hierarchy
      operationId: getToReviewHierarchy
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HierarchyVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/hierarchy:
    x-swagger-router-controller: hierarchy
    get: 
      description: Returns the HierarchyVersion with state "approved_in_use"
      tags:
        - Hierarchy
      operationId: getLastApprovedInUseHierarchy
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HierarchyVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/hierarchy/{version}:
    x-swagger-router-controller: hierarchy
    put: 
      description: Update a HierarchyVersion state to "approved_in_use"
      tags:
        - Hierarchy
      operationId: setApprovedInUseHierarchy
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/reproduction/{version}:
    x-swagger-router-controller: reproduction
    get: 
      description: Returns a ReproductionVersion by id_record and number of version
      tags:
        - Reproduction
      operationId: getReproduction
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReproductionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/reproduction:
    x-swagger-router-controller: reproduction
    post:
      description: Save a new ReproductionVersion that belongs to the record with the id in the route
      tags:
        - Reproduction
      operationId: postReproduction
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: reproductionVersion
          description: reproductionVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReproductionVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/reproduction:
    x-swagger-router-controller: reproduction
    get: 
      description: Returns a list of ReproductionVersion with state "to_review"
      tags:
        - Reproduction
      operationId: getToReviewReproduction
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReproductionVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/reproduction:
    x-swagger-router-controller: reproduction
    get: 
      description: Returns the ReproductionVersion with state "approved_in_use"
      tags:
        - Reproduction
      operationId: getLastApprovedInUseReproduction
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReproductionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/reproduction/{version}:
    x-swagger-router-controller: reproduction
    put: 
      description: Update a ReproductionVersion state to "approved_in_use"
      tags:
        - Reproduction
      operationId: setApprovedInUseReproduction
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/annual_cycles/{version}:
    x-swagger-router-controller: annualCycles
    get: 
      description: Returns an AnnualCyclesVersion by id_record and number of version
      tags:
        - AnnualCycles
      operationId: getAnnualCycles
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AnnualCyclesVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/annual_cycles:
    x-swagger-router-controller: annualCycles
    post:
      description: Save a new AnnualCyclesVersion that belongs to the record with the id in the route
      tags:
        - AnnualCycles
      operationId: postAnnualCycles
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: AnnualCyclesVersion
          description: AnnualCyclesVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/AnnualCyclesVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/annual_cycles:
    x-swagger-router-controller: annualCycles
    get: 
      description: Returns a list of AnnualCyclesVersion with state "to_review"
      tags:
        - AnnualCycles
      operationId: getToReviewAnnualCycles
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AnnualCyclesVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/annual_cycles:
    x-swagger-router-controller: annualCycles
    get: 
      description: Returns the annualCycles with state "approved_in_use"
      tags:
        - AnnualCycles
      operationId: getLastApprovedInUseAnnualCycles
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AnnualCyclesVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/annual_cycles/{version}:
    x-swagger-router-controller: annualCycles
    put: 
      description: Update a AnnualCyclesVersion state to "approved_in_use"
      tags:
        - AnnualCycles
      operationId: setApprovedInUseAnnualCycles
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/feeding/{version}:
    x-swagger-router-controller: feeding
    get: 
      description: Returns a FeedingVersion by id_record and number of version
      tags:
        - Feeding
      operationId: getFeeding
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FeedingVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/feeding:
    x-swagger-router-controller: feeding
    post:
      description: Save a new FeedingVersion that belongs to the record with the id in the route
      tags:
        - Feeding
      operationId: postFeeding
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: FeedingVersion
          description: FeedingVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/FeedingVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
        
  /records/to_review/{id}/feeding:
    x-swagger-router-controller: feeding
    get: 
      description: Returns a list of FeedingVersion with state "to_review"
      tags:
        - Feeding
      operationId: getToReviewFeeding
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FeedingVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/feeding:
    x-swagger-router-controller: feeding
    get: 
      description: Returns the FeedingVersion with state "approved_in_use"
      tags:
        - Feeding
      operationId: getLastApprovedInUseFeeding
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/FeedingVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/feeding/{version}:
    x-swagger-router-controller: feeding
    put: 
      description: Update a FeedingVersion state to "approved_in_use"
      tags:
        - Feeding
      operationId: setApprovedInUseFeeding
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/dispersal/{version}:
    x-swagger-router-controller: dispersal
    get: 
      description: Returns a DispersalVersion by id_record and number of version
      tags:
        - Dispersal
      operationId: getDispersal
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DispersalVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/dispersal:
    x-swagger-router-controller: dispersal
    post:
      description: Save a new DispersalVersion that belongs to the record with the id in the route
      tags:
        - Dispersal
      operationId: postDispersal
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: DispersalVersion
          description: DispersalVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/DispersalVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/dispersal:
    x-swagger-router-controller: dispersal
    get: 
      description: Returns a list of DispersalVersion with state "to_review"
      tags:
        - Dispersal
      operationId: getToReviewDispersal
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DispersalVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/dispersal:
    x-swagger-router-controller: dispersal
    get: 
      description: Returns the DispersalVersion with state "approved_in_use"
      tags:
        - Dispersal
      operationId: getLastApprovedInUseDispersal
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DispersalVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/dispersal/{version}:
    x-swagger-router-controller: dispersal
    put: 
      description: Update a DispersalVersion state to "approved_in_use"
      tags:
        - Dispersal
      operationId: setApprovedInUseDispersal
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/behavior/{version}:
    x-swagger-router-controller: behavior
    get: 
      description: Returns a BehaviorVersion by id_record and number of version
      tags:
        - Behavior
      operationId: getBehavior
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BehaviorVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/behavior:
    x-swagger-router-controller: behavior
    post:
      description: Save a new BehaviorVersion that belongs to the record with the id in the route
      tags:
        - Behavior
      operationId: postBehavior
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: BehaviorVersion
          description: BehaviorVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/BehaviorVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/behavior:
    x-swagger-router-controller: behavior
    get: 
      description: Returns a list of BehaviorVersion with state "to_review"
      tags:
        - Behavior
      operationId: getToReviewBehavior
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BehaviorVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/behavior:
    x-swagger-router-controller: behavior
    get: 
      description: Returns the BehaviorVersion with state "approved_in_use"
      tags:
        - Behavior
      operationId: getLastApprovedInUseBehavior
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BehaviorVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/behavior/{version}:
    x-swagger-router-controller: behavior
    put: 
      description: Update a BehaviorVersion state to "approved_in_use"
      tags:
        - Behavior
      operationId: setApprovedInUseBehavior
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/interactions/{version}:
    x-swagger-router-controller: interactions
    get: 
      description: Returns a InteractionsVersion by id_record and number of version
      tags:
        - Interactions
      operationId: getInteractions
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InteractionsVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/interactions:
    x-swagger-router-controller: interactions
    post:
      description: Save a new InteractionsVersion that belongs to the record with the id in the route
      tags:
        - Interactions
      operationId: postInteractions
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: InteractionsVersion
          description: InteractionsVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/InteractionsVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/interactions:
    x-swagger-router-controller: interactions
    get: 
      description: Returns a list of InteractionsVersion with state "to_review"
      tags:
        - Interactions
      operationId: getToReviewInteractions
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InteractionsVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/interactions:
    x-swagger-router-controller: interactions
    get: 
      description: Returns the InteractionsVersion with state "approved_in_use"
      tags:
        - Interactions
      operationId: getLastApprovedInUseInteractions
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InteractionsVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/interactions/{version}:
    x-swagger-router-controller: interactions
    put: 
      description: Update a InteractionsVersion state to "approved_in_use"
      tags:
        - Interactions
      operationId: setApprovedInUseInteractions
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/molecular_data/{version}:
    x-swagger-router-controller: molecularData
    get: 
      description: Returns a MolecularDataVersion by id_record and number of version
      tags:
        - MolecularData
      operationId: getMolecularData
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MolecularDataVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/molecular_data:
    x-swagger-router-controller: molecularData
    post:
      description: Save a new MolecularDataVersion that belongs to the record with the id in the route
      tags:
        - MolecularData
      operationId: postMolecularData
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: MolecularDataVersion
          description: MolecularDataVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/MolecularDataVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/molecular_data:
    x-swagger-router-controller: molecularData
    get: 
      description: Returns a list of MolecularDataVersion with state "to_review"
      tags:
        - MolecularData
      operationId: getToReviewMolecularData
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MolecularDataVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/molecular_data:
    x-swagger-router-controller: molecularData
    get: 
      description: Returns the molecularDataVersion  with state "approved_in_use"
      tags:
        - MolecularData
      operationId: getLastApprovedInUseMolecularData
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MolecularDataVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/molecular_data/{version}:
    x-swagger-router-controller: molecularData
    put: 
      description: Update a MolecularDataVersion state to "approved_in_use"
      tags:
        - MolecularData
      operationId: setApprovedInUseMolecularData
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/migratory/{version}:
    x-swagger-router-controller: migratory
    get: 
      description: Returns MigratoryVersion by id_record and number of version
      tags:
        - Migratory
      operationId: getMigratory
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MigratoryVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/migratory:
    x-swagger-router-controller: migratory
    post:
      description: Save a new MigratoryVersion that belongs to the record with the id in the route
      tags:
        - Migratory
      operationId: postMigratory
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: migratory
          description: MigratoryVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/MigratoryVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
          
  /records/to_review/{id}/migratory:
    x-swagger-router-controller: migratory
    get: 
      description: Returns a list of MigratoryVersion with state "to_review"
      tags:
        - Migratory
      operationId: getToReviewMigratory
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MigratoryVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/migratory:
    x-swagger-router-controller: migratory
    get: 
      description: Returns the MigratoryVersion with state "approved_in_use"
      tags:
        - Migratory
      operationId: getLastApprovedInUseMigratory
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MigratoryVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/migratory/{version}:
    x-swagger-router-controller: migratory
    put: 
      description: Update a MigratoryVersion state to "approved_in_use"
      tags:
        - Migratory
      operationId: setApprovedInUseMigratory
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/habitats/{version}:
    x-swagger-router-controller: habitats
    get: 
      description: Returns a HabitatsVersion by id_record and number of version
      tags:
        - Habitats
      operationId: getHabitats
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HabitatsVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/habitats:
    x-swagger-router-controller: habitats
    post:
      description: Save a new HabitatsVersion that belongs to the record with the id in the route
      tags:
        - Habitats
      operationId: postHabitats
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: HabitatsVersion
          description: HabitatsVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/HabitatsVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/habitats:
    x-swagger-router-controller: habitats
    get: 
      description: Returns a list of HabitatsVersion with state "to_review"
      tags:
        - Habitats
      operationId: getToReviewHabitats
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HabitatsVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/habitats:
    x-swagger-router-controller: habitats
    get: 
      description: Returns the HabitatsVersion with state "approved_in_use"
      tags:
        - Habitats
      operationId: getLastApprovedInUseHabitats
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HabitatsVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/habitats/{version}:
    x-swagger-router-controller: habitats
    put: 
      description: Update a HabitatsVersion state to "approved_in_use"
      tags:
        - Habitats
      operationId: setApprovedInUseHabitats
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/distribution/{version}:
    x-swagger-router-controller: distribution
    get: 
      description: Returns a DistributionVersion by id_record and number of version
      tags:
        - Distribution
      operationId: getDistribution
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DistributionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/distribution:
    x-swagger-router-controller: distribution
    post:
      description: Save a new DistributionVersion that belongs to the record with the id in the route
      tags:
        - Distribution
      operationId: postDistribution
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: distribution
          description: DistributionVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/DistributionVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/distribution:
    x-swagger-router-controller: distribution
    get: 
      description: Returns a list of DistributionVersion with state "to_review"
      tags:
        - Distribution
      operationId: getToReviewDistribution
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DistributionVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/distribution:
    x-swagger-router-controller: distribution
    get: 
      description: Returns the DistributionVersion  with state "approved_in_use"
      tags:
        - Distribution
      operationId: getLastApprovedInUseDistribution
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DistributionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/distribution/{version}:
    x-swagger-router-controller: distribution
    put: 
      description: Update a DistributionVersion state to "approved_in_use"
      tags:
        - Distribution
      operationId: setApprovedInUseDistribution
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/territory/{version}:
    x-swagger-router-controller: territory
    get: 
      description: Returns a TerritoryVersion by id_record and number of version
      tags:
        - Territory
      operationId: getTerritory
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TerritoryVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/territory:
    x-swagger-router-controller: territory
    post:
      description: Save a TerritoryVersion that belongs to the record with the id in the route
      tags:
        - Territory
      operationId: postTerritory
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: territory
          description: TerritoryVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerritoryVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/territory:
    x-swagger-router-controller: territory
    get: 
      description: Returns a list of TerritoryVersion with state "to_review"
      tags:
        - Territory
      operationId: getToReviewTerritory
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TerritoryVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/territory:
    x-swagger-router-controller: territory
    get: 
      description: Returns the TerritoryVersion with state "approved_in_use"
      tags:
        - Territory
      operationId: getLastApprovedInUseTerritory
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TerritoryVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/territory/{version}:
    x-swagger-router-controller: territory
    put: 
      description: Update a TerritoryVersion state to "approved_in_use"
      tags:
        - Territory
      operationId: setApprovedInUseTerritory
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/population_biology/{version}:
    x-swagger-router-controller: populationBiology
    get: 
      description: Returns a PopulationBiologyVersion by id_record and number of version
      tags:
        - PopulationBiology
      operationId: getPopulationBiology
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PopulationBiologyVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/population_biology:
    x-swagger-router-controller: populationBiology
    post:
      description: Save a new PopulationBiologyVersion that belongs to the record with the id in the route
      tags:
        - PopulationBiology
      operationId: postPopulationBiology
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: populationBiology
          description: PopulationBiologyVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/PopulationBiologyVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/population_biology:
    x-swagger-router-controller: populationBiology
    get: 
      description: Returns a list of PopulationBiologyVersion with state "to_review"
      tags:
        - PopulationBiology
      operationId: getToReviewPopulationBiology
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PopulationBiologyVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/population_biology:
    x-swagger-router-controller: populationBiology
    get: 
      description: Returns the PopulationBiologyVersion with state "approved_in_use"
      tags:
        - PopulationBiology
      operationId: getLastApprovedInUsePopulationBiology
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PopulationBiologyVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/population_biology/{version}:
    x-swagger-router-controller: populationBiology
    put: 
      description: Update a PopulationBiologyVersion with state "approved_in_use"
      tags:
        - PopulationBiology
      operationId: setApprovedInUsePopulationBiology
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/threat_status/{version}:
    x-swagger-router-controller: threatStatus
    get: 
      description: Returns a ThreatStatusVersion by id_record and number of version
      tags:
        - ThreatStatus
      operationId: getThreatStatus
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ThreatStatusVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/threat_status:
    x-swagger-router-controller: threatStatus
    post:
      description: Save a new ThreatStatusVersion that belongs to the record with the id in the path
      tags:
        - ThreatStatus
      operationId: postThreatStatus
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: threatStatus
          description: ThreatStatusVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ThreatStatusVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/threat_status:
    x-swagger-router-controller: threatStatus
    get: 
      description: Returns a list of ThreatStatus version with state "to_review"
      tags:
        - ThreatStatus
      operationId: getToReviewThreatStatus
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ThreatStatusVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/threat_status:
    x-swagger-router-controller: threatStatus
    get: 
      description: Returns the ThreatStatusVersion with state "approved_in_use"
      tags:
        - ThreatStatus
      operationId: getLastApprovedInUseThreatStatus
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ThreatStatusVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/threat_status/{version}:
    x-swagger-router-controller: threatStatus
    put: 
      description: Update a ThreatStatusVersion state to "approved_in_use"
      tags:
        - ThreatStatus
      operationId: setApprovedInUseThreatStatus
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/legislation/{version}:
    x-swagger-router-controller: legislation
    get: 
      description: Returns a LegislationVersion by id_record and number of version
      tags:
        - Legislation
      operationId: getLegislation
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LegislationVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/legislation:
    x-swagger-router-controller: legislation
    post:
      description: Save a new LegislationVersion that belongs to the record with the id in the path
      tags:
        - Legislation
      operationId: postLegislation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: legislation
          description: LegislationVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/LegislationVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /records/to_review/{id}/legislation:
    x-swagger-router-controller: legislation
    get: 
      description: Returns a list of LegislationVersion with state "to_review"
      tags:
        - Legislation
      operationId: getToReviewLegislation
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LegislationVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/legislation:
    x-swagger-router-controller: legislation
    get: 
      description: Returns the LegislationVersion with state "approved_in_use"
      tags:
        - Legislation
      operationId: getLastApprovedInUseLegislation
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/LegislationVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/legislation/{version}:
    x-swagger-router-controller: legislation
    put: 
      description: Update a LegislationVersion state to "approved_in_use"
      tags:
        - Legislation
      operationId: setApprovedInUseLegislation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
                
            
  /records/{id}/uses_management_conservation/{version}:
    x-swagger-router-controller: usesManagementAndConservation
    get: 
      description: Returns a UsesManagementAndConservationVersion by id_record and number of version
      tags:
        - UsesManagementAndConservation
      operationId: getUsesManagementAndConservation
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UsesManagementAndConservationVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/uses_management_conservation:
    x-swagger-router-controller: usesManagementAndConservation
    post:
      description: Save a new UsesManagementAndConservationVersion that belongs to the record with the id in the path
      tags:
        - UsesManagementAndConservation
      operationId: postUsesManagementAndConservation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: usesManagementAndConservation
          description: UsesManagementAndConservationVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/UsesManagementAndConservationVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/uses_management_conservation:
    x-swagger-router-controller: usesManagementAndConservation
    get: 
      description: Returns a list of UsesManagementAndConservationVersion with state "to_review"
      tags:
        - UsesManagementAndConservation
      operationId: getToReviewUsesManagementAndConservation
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UsesManagementAndConservationVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/uses_management_conservation:
    x-swagger-router-controller: usesManagementAndConservation
    get: 
      description: Returns the UsesManagementAndConservationVersion with state "approved_in_use"
      tags:
        - UsesManagementAndConservation
      operationId: getLastApprovedInUseUsesManagementAndConservation
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UsesManagementAndConservationVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/uses_management_conservation/{version}:
    x-swagger-router-controller: usesManagementAndConservation
    put: 
      description: Update a UsesManagementAndConservationVersion state to "approved_in_use"
      tags:
        - UsesManagementAndConservation
      operationId: setApprovedInUseUsesManagementAndConservation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/{id}/direct_threats/{version}:
    x-swagger-router-controller: directThreats
    get: 
      description: Returns a DirectThreatsVersion by id_record and number of version
      tags:
        - DirectThreats
      operationId: getDirectThreats
      parameters:
        - name: id
          type: string
          description: "ID of the record(ficha)"
          in: path
          required: true
        - name: version
          type: integer
          description: "Version of the element"
          minimum: 1
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DirectThreatsVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/direct_threats:
    x-swagger-router-controller: directThreats
    post:
      description: Save a new version DirectThreatsVersion that belongs to the record with the id in the path
      tags:
        - DirectThreats
      operationId: postDirectThreats
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: directThreats
          description: DirectThreatsVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/DirectThreatsVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/direct_threats:
    x-swagger-router-controller: directThreats
    get: 
      description: Returns a list of DirectThreatsVersion with state "to_review"
      tags:
        - DirectThreats
      operationId: getToReviewDirectThreats
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DirectThreatsVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/direct_threats:
    x-swagger-router-controller: directThreats
    get: 
      description: Returns the DirectThreatsVersion with state "approved_in_use"
      tags:
        - DirectThreats
      operationId: getLastApprovedInUseDirectThreats
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DirectThreatsVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/direct_threats/{version}:
    x-swagger-router-controller: directThreats
    put: 
      description: Update a DirectThreatsVersion state to "approved_in_use"
      tags:
        - DirectThreats
      operationId: setApprovedInUseDirectThreats
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
              
  /records/{id}/endemic_atomized/{version}:
    x-swagger-router-controller: endemicAtomized
    get: 
      description: Returns an EndemicAtomizedVersion by id_record and number of version
      tags:
        - EndemicAtomized
      operationId: getEndemicAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EndemicAtomizedVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/endemic_atomized:
    x-swagger-router-controller: endemicAtomized
    post:
      description: Save a new EndemicAtomizedVersion that belongs to the record with the id in the path
      tags:
        - EndemicAtomized
      operationId: postEndemicAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: endemicAtomized
          description: EndemicAtomizedVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/EndemicAtomizedVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /records/to_review/{id}/endemic_atomized:
    x-swagger-router-controller: endemicAtomized
    get: 
      description: Returns a list of EndemicAtomizedVersion with state "to_review"
      tags:
        - EndemicAtomized
      operationId: getToReviewEndemicAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EndemicAtomizedVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/endemic_atomized:
    x-swagger-router-controller: endemicAtomized
    get: 
      description: Returns the EndemicAtomizedVersion with state "approved_in_use"
      tags:
        - EndemicAtomized
      operationId: getLastApprovedInUseEndemicAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EndemicAtomizedVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/endemic_atomized/{version}:
    x-swagger-router-controller: endemicAtomized
    put: 
      description: Update a EndemicAtomizedVersion state to "approved_in_use"
      tags:
        - EndemicAtomized
      operationId: setApprovedInUseEndemicAtomized
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/references/{version}:
    x-swagger-router-controller: references
    get: 
      description: Returns a version of a References element by record id and version
      tags:
        - element
      operationId: getReferences
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReferencesVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/references:
    x-swagger-router-controller: references
    post:
      description: Save a new version of a References element which belongs to record with id in the url
      tags:
        - element
      operationId: postReferences
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: reference
          description: ReferencesVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ReferencesVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/references:
    x-swagger-router-controller: references
    get: 
      description: Returns a list of References version with state "to_review"
      tags:
        - element
      operationId: getToReviewReferences
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReferencesVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/references:
    x-swagger-router-controller: references
    get: 
      description: Returns the references version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseReferences
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReferencesVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/references/{version}:
    x-swagger-router-controller: references
    put: 
      description: Update a ReferencesVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseReferences
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/environmental_envelope/{version}:
    x-swagger-router-controller: environmentalEnvelope
    get: 
      description: Returns a version of a EnvironmentalEnvelope element by record id and version
      tags:
        - element
      operationId: getEnvironmentalEnvelope
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EnvironmentalEnvelopeVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/environmental_envelope:
    x-swagger-router-controller: environmentalEnvelope
    post:
      description: Save a new version of a EnvironmentalEnvelope element which belongs to record with id in the url
      tags:
        - element
      operationId: postEnvironmentalEnvelope
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: environmentalEnvelope
          description: EnvironmentalEnvelopeVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnvironmentalEnvelopeVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/environmental_envelope:
    x-swagger-router-controller: environmentalEnvelope
    get: 
      description: Returns a list of EnvironmentalEnvelope version with state "to_review"
      tags:
        - element
      operationId: getToReviewEnvironmentalEnvelope
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EnvironmentalEnvelopeVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/environmental_envelope:
    x-swagger-router-controller: environmentalEnvelope
    get: 
      description: Returns the environmentalEnvelope version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseEnvironmentalEnvelope
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EnvironmentalEnvelopeVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/environmental_envelope/{version}:
    x-swagger-router-controller: environmentalEnvelope
    put: 
      description: Update a EnvironmentalEnvelopeVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseEnvironmentalEnvelope
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/ecological_significance/{version}:
    x-swagger-router-controller: ecologicalSignificance
    get: 
      description: Returns a version of a EcologicalSignificance element by record id and version
      tags:
        - element
      operationId: getEcologicalSignificance
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EcologicalSignificanceVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/ecological_significance:
    x-swagger-router-controller: ecologicalSignificance
    post:
      description: Save a new version of a EcologicalSignificance element which belongs to record with id in the url
      tags:
        - element
      operationId: postEcologicalSignificance
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: ecologicalSignificance
          description: EcologicalSignificanceVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/EcologicalSignificanceVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/ecological_significance:
    x-swagger-router-controller: ecologicalSignificance
    get: 
      description: Returns a list of EcologicalSignificance version with state "to_review"
      tags:
        - element
      operationId: getToReviewEcologicalSignificance
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EcologicalSignificanceVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/ecological_significance:
    x-swagger-router-controller: ecologicalSignificance
    get: 
      description: Returns the ecologicalSignificance version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseEcologicalSignificance
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/EcologicalSignificanceVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/ecological_significance/{version}:
    x-swagger-router-controller: ecologicalSignificance
    put: 
      description: Update a EcologicalSignificanceVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseEcologicalSignificance
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
            
  /records/{id}/invasiveness/{version}:
    x-swagger-router-controller: invasiveness
    get: 
      description: Returns a version of a Invasiveness element by record id and version
      tags:
        - element
      operationId: getInvasiveness
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InvasivenessVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/invasiveness:
    x-swagger-router-controller: invasiveness
    post:
      description: Save a new version of a Invasiveness element which belongs to record with id in the url
      tags:
        - element
      operationId: postInvasiveness
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: invasiveness
          description: InvasivenessVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/InvasivenessVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/invasiveness:
    x-swagger-router-controller: invasiveness
    get: 
      description: Returns a list of Invasiveness version with state "to_review"
      tags:
        - element
      operationId: getToReviewInvasiveness
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InvasivenessVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/invasiveness:
    x-swagger-router-controller: invasiveness
    get: 
      description: Returns the invasiveness version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseInvasiveness
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/InvasivenessVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/invasiveness/{version}:
    x-swagger-router-controller: invasiveness
    put: 
      description: Update a InvasivenessVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseInvasiveness
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/more_information/{version}:
    x-swagger-router-controller: moreInformation
    get: 
      description: Returns a version of a MoreInformation element by record id and version
      tags:
        - element
      operationId: getMoreInformation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoreInformationVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/more_information:
    x-swagger-router-controller: moreInformation
    post:
      description: Save a new version of a MoreInformation element which belongs to record with id in the url
      tags:
        - element
      operationId: postMoreInformation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: moreInformation
          description: MoreInformationVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/MoreInformationVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/more_information:
    x-swagger-router-controller: moreInformation
    get: 
      description: Returns a list of MoreInformation version with state "to_review"
      tags:
        - element
      operationId: getToReviewMoreInformation
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoreInformationVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/more_information:
    x-swagger-router-controller: moreInformation
    get: 
      description: Returns the moreInformation version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseMoreInformation
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MoreInformationVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/more_information/{version}:
    x-swagger-router-controller: moreInformation
    put: 
      description: Update a MoreInformationVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseMoreInformation
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/brief_description/{version}:
    x-swagger-router-controller: briefDescription
    get: 
      description: Returns a version of a BriefDescription element by record id and version
      tags:
        - element
      operationId: getBriefDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BriefDescriptionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/brief_description:
    x-swagger-router-controller: briefDescription
    post:
      description: Save a new version of a BriefDescription element which belongs to record with id in the url
      tags:
        - element
      operationId: postBriefDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: briefDescription
          description: BriefDescriptionVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/BriefDescriptionVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/brief_description:
    x-swagger-router-controller: briefDescription
    get: 
      description: Returns a list of BriefDescription version with state "to_review"
      tags:
        - element
      operationId: getToReviewBriefDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BriefDescriptionVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/brief_description:
    x-swagger-router-controller: briefDescription
    get: 
      description: Returns the briefDescription version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseBriefDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/BriefDescriptionVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/brief_description/{version}:
    x-swagger-router-controller: briefDescription
    put: 
      description: Update a BriefDescriptionVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseBriefDescription
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/{id}/ancillary_data/{version}:
    x-swagger-router-controller: ancillaryData
    get: 
      description: Returns a version of a AncillaryData element by record id and version
      tags:
        - element
      operationId: getAncillaryData
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AncillaryDataVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/{id}/ancillary_data:
    x-swagger-router-controller: ancillaryData
    post:
      description: Save a new version of a AncillaryData element which belongs to record with id in the url
      tags:
        - element
      operationId: postAncillaryData
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: ancillaryData
          description: AncillaryDataVersion object
          in: body
          required: true
          schema:
            $ref: '#/definitions/AncillaryDataVersion'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/to_review/{id}/ancillary_data:
    x-swagger-router-controller: ancillaryData
    get: 
      description: Returns a list of AncillaryData version with state "to_review"
      tags:
        - element
      operationId: getToReviewAncillaryData
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AncillaryDataVersionList"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
  /records/approved_in_use/{id}/ancillary_data:
    x-swagger-router-controller: ancillaryData
    get: 
      description: Returns the ancillaryData version approved_in_use #**
      tags:
        - element
      operationId: getLastApprovedInUseAncillaryData
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AncillaryDataVersion"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /records/approved_in_use/{id}/ancillary_data/{version}:
    x-swagger-router-controller: ancillaryData
    put: 
      description: Update a AncillaryDataVersion state to approved_in_use
      tags:
        - element
      operationId: setApprovedInUseAncillaryData
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: version
          type: integer
          in: path
          required: true
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  
            
            
  /list_records/{id}:
    x-swagger-router-controller: listRecords
    get: 
      description: Returns a listRecords by id
      tags:
        - listRecords
      operationId: getListRecords
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ListRecords"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /list_records:
    x-swagger-router-controller: listRecords
    post:
      description: Save a new listRecords 
      tags:
        - listRecords
      operationId: postListRecords
      parameters:
        - name: listRecords
          description: ListRecords object
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRecords'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /user/{id}:
    x-swagger-router-controller: user
    get: 
      description: Returns a user by id
      tags:
        - user
      operationId: getUser
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /user:
    x-swagger-router-controller: user
    post:
      description: Save a new user 
      tags:
        - user
      operationId: postUser
      parameters:
        - name: user
          description: User object
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /group/{id}:
    x-swagger-router-controller: group
    get: 
      description: Returns a group by id
      tags:
        - group
      operationId: getGroup
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Group"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /group:
    x-swagger-router-controller: group
    post:
      description: Save a new group 
      tags:
        - group
      operationId: postGroup
      parameters:
        - name: group
          description: Group object
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ResultResponse"
        # responses may fall through to errors
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Record:
    required:
      - -id
    properties:
      -id:
        type: string
      associatedParty:
        type: array
        items:
          $ref: '#/definitions/Agent'
      commonNamesAtomized:
        type: array
        items:
          $ref: '#/definitions/CommonNamesAtomized' 
      synonymsAtomized:
        type: array
        items:
          $ref: '#/definitions/SynonymsAtomized' 
      taxonRecordName:
        $ref: '#/definitions/TaxonRecordName' 
      lifeCycle:
        $ref: '#/definitions/LifeCycle' 
      lifeForm:
        $ref: '#/definitions/LifeForm' 
      identificationKeys:
        $ref: '#/definitions/IdentificationKeys' 
      fullDescription:
        $ref: '#/definitions/FullDescription' 
      abstract:
        type: string
      hierarchy:
        type: array
        items:
          $ref: '#/definitions/Hierarchy' 
      reproduction:
        $ref: '#/definitions/Reproduction' 
      annualCycles:
        $ref: '#/definitions/AnnualCycles' 
      feeding:
        $ref: '#/definitions/Feeding' 
      dispersal:
        $ref: '#/definitions/Dispersal' 
      behavior:
        $ref: '#/definitions/Behavior' 
      interactions:
        $ref: '#/definitions/Interactions' 
      molecularData:
        $ref: '#/definitions/MolecularData' 
      migratory:
        $ref: '#/definitions/Migratory' 
      habitats:
        $ref: '#/definitions/Habitats' 
      distribution:
        type: array
        items:
          $ref: '#/definitions/Distribution'
      territory:
        $ref: '#/definitions/Territory' 
      populationBiology:
        $ref: '#/definitions/PopulationBiology' 
      threatStatus:
        type: array
        items:
          $ref: '#/definitions/ThreatStatus' 
      legislation:
        $ref: '#/definitions/Legislation' 
      usesManagementAndConservation:
        $ref: '#/definitions/UsesManagementAndConservation' 
      directThreats:
        $ref: '#/definitions/DirectThreats'
      endemicAtomized:
        type: array
        items:
          $ref: '#/definitions/EndemicAtomized' 
      references:
        type: array
        items:
          $ref: '#/definitions/Reference' 
      environmentalEnvelope:
        $ref: '#/definitions/EnvironmentalEnvelope' 
      ecologicalSignificance:
        $ref: '#/definitions/EcologicalSignificance' 
      invasiveness:
        $ref: '#/definitions/Invasiveness' 
      moreInformation:
        type: string
      
        
  MoreInformationVersion:
    required:
      - moreInformation
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      moreInformation:
        type: string
        
  AssociatedPartyVersion:
    required:
      - associatedParty
      - id_user
    properties:
      id:
        type: string
      id_record: 
        type: string
      created: 
        type: string 
        #pattern: '^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$'
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      associatedParty:
        type: array
        items:
          $ref: '#/definitions/Agent'
          
  DirectThreatsVersion:
    required:
      - directThreats
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      directThreats:
        $ref: '#/definitions/DirectThreats'
        
  #BaseElementsVersion:
  
  TaxonRecordNameVersionList:
    properties:
      taxonRecordNameList:
        type: array
        items:
          $ref: '#/definitions/TaxonRecordNameVersion'
          
  AssociatedPartyVersionList:
    properties:
      associatedPartyList:
        type: array
        items:
          $ref: '#/definitions/AssociatedPartyVersion'
          
  DirectThreatsVersionList:
    properties:
      directThreatsList:
        type: array
        items:
          $ref: '#/definitions/DirectThreatsVersion'
          
  MoreInformationVersionList:
    properties:
      moreInformationList:
        type: array
        items:
          $ref: '#/definitions/MoreInformationVersion'
          
  SynonymsAtomizedVersionList:
    properties:
      synonymsAtomizedList:
        type: array
        items:
          $ref: '#/definitions/SynonymsAtomizedVersion'
          
  CommonNamesAtomizedVersionList:
    properties:
      commonNamesAtomizedList:
        type: array
        items:
          $ref: '#/definitions/CommonNamesAtomizedVersion'
          
  HierarchyVersionList:
    properties:
      hierarchyList:
        type: array
        items:
          $ref: '#/definitions/HierarchyVersion'
          
  BriefDescriptionVersionList:
    properties:
      briefDescriptionList:
        type: array
        items:
          $ref: '#/definitions/BriefDescriptionVersion'
          
  AbstractVersionList:
    properties:
      abstractList:
        type: array
        items:
          $ref: '#/definitions/AbstractVersion'
          
  FullDescriptionVersionList:
    properties:
      fullDescriptionList:
        type: array
        items:
          $ref: '#/definitions/FullDescriptionVersion'
          
  IdentificationKeysVersionList:
    properties:
      identificationKeysList:
        type: array
        items:
          $ref: '#/definitions/IdentificationKeysVersion'
          
  LifeFormVersionList:
    properties:
      lifeFormList:
        type: array
        items:
          $ref: '#/definitions/LifeFormVersion'
          
  LifeCycleVersionList:
    properties:
      lifeCycleList:
        type: array
        items:
          $ref: '#/definitions/LifeCycleVersion'
          
  ReproductionVersionList:
    properties:
      reproductionList:
        type: array
        items:
          $ref: '#/definitions/ReproductionVersion'
          
  AnnualCyclesVersionList:
    properties:
      annualCyclesList:
        type: array
        items:
          $ref: '#/definitions/AnnualCyclesVersion'
          
  MolecularDataVersionList:
    properties:
      molecularDataList:
        type: array
        items:
          $ref: '#/definitions/MolecularDataVersion'
          
  MigratoryVersionList:
    properties:
      migratoryList:
        type: array
        items:
          $ref: '#/definitions/MigratoryVersion'
          
  EcologicalSignificanceVersionList:
    properties:
      ecologicalSignificanceList:
        type: array
        items:
          $ref: '#/definitions/EcologicalSignificanceVersion'
          
  EnvironmentalEnvelopeVersionList:
    properties:
      environmentalEnvelopeList:
        type: array
        items:
          $ref: '#/definitions/EnvironmentalEnvelopeVersion'
          
  InvasivenessVersionList:
    properties:
      invasivenessList:
        type: array
        items:
          $ref: '#/definitions/InvasivenessVersion'
          
  FeedingVersionList:
    properties:
      feedingList:
        type: array
        items:
          $ref: '#/definitions/FeedingVersion'
          
  DispersalVersionList:
    properties:
      dispersalList:
        type: array
        items:
          $ref: '#/definitions/DispersalVersion'
          
  BehaviorVersionList:
    properties:
      behaviorList:
        type: array
        items:
          $ref: '#/definitions/BehaviorVersion'
          
  InteractionsVersionList:
    properties:
      interactionsList:
        type: array
        items:
          $ref: '#/definitions/InteractionsVersion'
          
  HabitatsVersionList:
    properties:
      habitatsList:
        type: array
        items:
          $ref: '#/definitions/HabitatsVersion'
          
  DistributionVersionList:
    properties:
      distributionList:
        type: array
        items:
          $ref: '#/definitions/DistributionVersion'
          
  TerritoryVersionList:
    properties:
      territoryList:
        type: array
        items:
          $ref: '#/definitions/TerritoryVersion'
          
  PopulationBiologyVersionList:
    properties:
      populationBiologyList:
        type: array
        items:
          $ref: '#/definitions/PopulationBiologyVersion'
          
  ThreatStatusVersionList:
    properties:
      threatStatusList:
        type: array
        items:
          $ref: '#/definitions/ThreatStatusVersion'

  LegislationVersionList:
    properties:
      legislationList:
        type: array
        items:
          $ref: '#/definitions/LegislationVersion'
          
  UsesManagementAndConservationVersionList:
    properties:
      usesManagementAndConservationList:
        type: array
        items:
          $ref: '#/definitions/UsesManagementAndConservationVersion'

  AncillaryDataVersionList:
    properties:
      ancillaryDataList:
        type: array
        items:
          $ref: '#/definitions/AncillaryDataVersion'
          
  ReferencesVersionList:
    properties:
      referencesList:
        type: array
        items:
          $ref: '#/definitions/ReferencesVersion'

  EndemicAtomizedVersionList:
    properties:
      endemicAtomizedList:
        type: array
        items:
          $ref: '#/definitions/EndemicAtomizedVersion'
          
  
  TaxonRecordNameVersion:
    required:
      - taxonRecordName
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
        #pattern: '^(\d{4}-\d{2}-\d{2})$'
        #pattern: '^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$'
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      taxonRecordName:
        $ref: '#/definitions/TaxonRecordName'
    
        
  SynonymsAtomizedVersion:
    required:
      - synonymsAtomized
    properties:
      id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      synonymsAtomized:
        type: array
        items:
          $ref: '#/definitions/SynonymsAtomized'
          
  CommonNamesAtomizedVersion:
    required:
      - commonNamesAtomized
    properties:
      id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      commonNamesAtomized:
        type: array
        items:
          $ref: '#/definitions/CommonNamesAtomized'
          
  HierarchyVersion:
    required:
      - hierarchy
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      hierarchy:
        type: array
        items:
          $ref: '#/definitions/Hierarchy'
          
  BriefDescriptionVersion:
    required:
      - briefDescription
      - id_user
    properties:
      -id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      briefDescription:
        type: string
        
  AbstractVersion:
    required:
      - abstract
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      abstract:
        type: string
        
  FullDescriptionVersion:
    required:
      - fullDescription
      - id_user
    properties:
      -id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      fullDescription:
        $ref: '#/definitions/FullDescription'
        
  IdentificationKeysVersion:
    required:
      - identificationKeys
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      identificationKeys:
        $ref: '#/definitions/IdentificationKeys'
        
  LifeFormVersion:
    required:
      - lifeForm
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      lifeForm:
        $ref: '#/definitions/LifeForm'
        
  LifeCycleVersion:
    required:
      - lifeCycle
      - id_user
    properties:
      id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      lifeCycle:
        $ref: '#/definitions/LifeCycle'
        
  ReproductionVersion:
    required:
      - reproduction
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      reproduction:
        $ref: '#/definitions/Reproduction'
        
  AnnualCyclesVersion:
    required:
      - annualCycles
      - id_user
    properties:
      -id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      annualCycles:
        $ref: '#/definitions/AnnualCycles'
        
  MolecularDataVersion:
    required:
      - molecularData
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      molecularData:
        $ref: '#/definitions/MolecularData'
        
  MigratoryVersion:
    required:
      - migratory
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      migratory:
        $ref: '#/definitions/Migratory'
        
  EcologicalSignificanceVersion:
    required:
      - ecologicalSignificance
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      ecologicalSignificance:
        $ref: '#/definitions/EcologicalSignificance'
        
  EnvironmentalEnvelopeVersion:
    required:
      - environmentalEnvelope
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      environmentalEnvelope:
        $ref: '#/definitions/EnvironmentalEnvelope'
      
  InvasivenessVersion:
    required:
      - invasiveness
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      invasiveness:
        $ref: '#/definitions/Invasiveness'   
        
  FeedingVersion:
    required:
      - feeding
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      feeding:
        $ref: '#/definitions/Feeding'
        
  DispersalVersion:
    required:
      - dispersal
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      dispersal:
        $ref: '#/definitions/Dispersal'
        
  BehaviorVersion:
    required:
      - behavior
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      behavior:
        $ref: '#/definitions/Behavior'
        
  InteractionsVersion:
    required:
      - interactions
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      interactions:
        $ref: '#/definitions/Interactions'
        
  HabitatsVersion:
    required:
      - habitats
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      habitats:
        $ref: '#/definitions/Habitats'
        
  DistributionVersion:
    required:
      - distribution
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      distribution:
        type: array
        items:
          $ref: '#/definitions/Distribution'
        
  TerritoryVersion:
    required:
      - territory
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      territory:
        $ref: '#/definitions/Territory'
        
  PopulationBiologyVersion:
    required:
      - populationBiology
      - id_user
    properties:
      -id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      populationBiology:
        $ref: '#/definitions/PopulationBiology'
        
  ThreatStatusVersion:
    required:
      - threatStatus
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      threatStatus:
        type: array
        items:
          $ref: '#/definitions/ThreatStatus'
        
  LegislationVersion:
    required:
      - legislation
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      legislation:
        $ref: '#/definitions/Legislation'
        
  UsesManagementAndConservationVersion:
    required:
      - usesManagementAndConservation
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      usesManagementAndConservation:
        $ref: '#/definitions/UsesManagementAndConservation'
        
  ReferencesVersion:
    required:
      - references
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      references:
        type: array
        items:
          $ref: '#/definitions/Reference'
          
          
  AncillaryDataVersion:
    required:
      - ancillaryData
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
          
  
  EndemicAtomizedVersion:
    required:
      - endemicAtomized
      - id_user
    properties:
      _id:
        type: string
      id_record: 
        type: string
      created: 
        type: string #****
      id_user:
        type: string
      version:
        type: integer
      state:
        type: string
      element:
        type: string
      endemicAtomized:
        type: array
        items:
          $ref: '#/definitions/EndemicAtomized'  
  
        
  Agent:
    properties:
      firstName: 
        type: string
      lastName:
        type: string
      organisation:
        type: string
      position:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      country: 
        type: string
      postalCode:
        type: string
      phone:
        type: string
      email:
        type: string
      homepage:
        type: string
      personnelDirectory:
        type: string
      personnelIdentifier :
        type: string
        
  Invasiveness:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      invasivenessUnstructured:
        type: string
      invasivenessAtomized:
        type: array
        items:
          $ref: '#/definitions/InvasivenessAtomized'
          
  InvasivenessAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      origin:
        type: string
      presence:
        type: string
      persistence:
        type: string
      distribution:
        type: string
      harmful:
        type: string
      modified:
        $ref: '#/definitions/DateInterval'
      startValidateDate:
        $ref: '#/definitions/DateInterval'
      endValidateDate:
        $ref: '#/definitions/DateInterval'
      countryCode:
        type: string
      stateProvince:
        type: string
      county:
        type: string
      localityName:
        type: string
      language:
        type: string
      citation:
        type: string
      abundance:
        type: string
      trend:
        type: string
      rateOfSpread:
        type: string
      regulatoryListing:
        type: string
      memo:
        type: string
      localityType:
        type: string
      locationValue:
        type: string
      publicationDatePrecision:
        type: string
      whatImpact:
        type: string
      vector:
        type: string
      route:
        type: string
      target:
        type: string
      mechanism:
        type: string
        
  DateInterval:
    properties:
      type: 
        type: string # ** Date
      default:
        type: string # ** Date
        
  EcologicalSignificance:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      ecologicalSignificanceUnstructured:
        type: string
      ecologicalSignificanceAtomized:
        type: array
        items:
          $ref: '#/definitions/EcologicalSignificanceAtomized'
          
  EcologicalSignificanceAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
        
  EnvironmentalEnvelope:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      environmentalEnvelopeUnstructured:
        type: string
      environmentalEnvelopeAtomized:
        type: array
        items:
          $ref: '#/definitions/EnvironmentalEnvelopeAtomized'
          
  EnvironmentalEnvelopeAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
        
  EndemicAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      endemicTo:
        type: array
        items:
          type: string
      endemicIn:
        type: string
          
  DirectThreats:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      directThreatsUnstructured:
        type: string
      directThreatsAtomized:
        type: array
        items:
          $ref: '#/definitions/DirectThreatsAtomized'
          
  DirectThreatsAtomized:
    properties:
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
        
  UsesManagementAndConservation:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      managementAndConservation:
        $ref: '#/definitions/ManagementAndConservation'
      usesAtomized:
        type: array
        items:
          $ref: '#/definitions/UsesAtomized'
          
  ManagementAndConservation:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      managementAndConservationUnstructured:
        type: string
      managementAndConservationAtomized:
        type: array
        items:
          $ref: '#/definitions/ManagementAndConservationAtomized'
  
  ManagementAndConservationAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      type: 
        type: string
      objetive:
        type: string
      managementPlan:
        type: string
      actions:
        type: array
        items:
          $ref: '#/definitions/Actions'
      humanAndEnviromentalrelevanc:
        type: string
        
  Actions:
     properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      measurementOrFact:
        type: array
        items:
          $ref: '#/definitions/MeasurementOrFact'
          
  UsesAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      sourceOfInformation:
        $ref: '#/definitions/SourceOfInformation'
      useValue:
        type: string
      partUsed:
        type: string
      users:
        type: string
      organisms:
        type: string
      vernacularNameUseAnnotations:
        type: string
      productionDetails:
        type: string
      meansOfApplicationAdministration:
        type: string
      seasonOfAvailabilityUse:
        type: string
      conservationExplotationData:
        type: string
      useTypeAtomized:
        type: string
      economics:
        type: string
      ratingPopularity:
        type: string
      properties:
        type: string
      potential:
        type: string
      useNotes:
        type: string
        
  SourceOfInformation:
    properties:
      references:
        type: array
        items: 
          type: string
      sourceOfInformationText:
        type: string
      
  Legislation:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      legislationUnstructured:
        type: string
      legislationAtomized:
        type: array
        items:
          $ref: '#/definitions/LegislationAtomized'
          
  LegislationAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      legislationName:
        type: string
      protectionLegalStatus:
        type: string
      legislationRead:
        type: string
      status: 
        type: string
      type:
        type: string
      norm:
        type: string
      appliesTo:
        $ref: '#/definitions/AppliesTo'
      
  ThreatStatus:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      threatStatusUnstructured:
        type: string
      threatStatusAtomized:
        $ref: '#/definitions/ThreatStatusAtomized'
        
  ThreatStatusAtomized:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      threatCategory:
        $ref: '#/definitions/MeasurementOrFact' 
      authority:
        type: array
        items: 
          type: string
      appliesTo:
        $ref: '#/definitions/AppliesTo' 
      apendiceCITES:
        type: string
        
  AppliesTo:
    properties:
      country:
        type: string
      stateProvince:
        type: string
      county:
        type: string
      municipality:
        type: string
      locality:
        type: string
        
  PopulationBiology:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      populationBiologyUnstructured:
        type: string
      populationBiologyAtomized:
        $ref: '#/definitions/PopulationBiologyAtomized'
        
  PopulationBiologyAtomized:
    properties:
      region: 
        $ref: '#/definitions/Measurement'
      abundanceData:
        $ref: '#/definitions/Measurement'
      densityData:
        $ref: '#/definitions/Measurement'
      patternDistribution:
        $ref: '#/definitions/Measurement'
      size:
        $ref: '#/definitions/Measurement'
      sexRatio:
        $ref: '#/definitions/Measurement'
      fecundity:
        $ref: '#/definitions/Measurement'
      mortalityRate:
        $ref: '#/definitions/Measurement'
      birthRate:
        $ref: '#/definitions/Measurement'
      numberIndividualsPerObservation:
        $ref: '#/definitions/Measurement'
      averageDensity:
        $ref: '#/definitions/Measurement'
      populationTrend:
        $ref: '#/definitions/Measurement'
      recruitment:
        $ref: '#/definitions/Measurement'
      populationGrowthRate:
        $ref: '#/definitions/Measurement'
      emigration:
        $ref: '#/definitions/Measurement'
      immigration:
        $ref: '#/definitions/Measurement'
      descriptionLifeStages:
        $ref: '#/definitions/Measurement'
      proportionIndividualsPerStageLife:
        $ref: '#/definitions/Measurement'
      carryingCapacity:
        $ref: '#/definitions/Measurement'
        
  Measurement:
    properties:
      measurementValue:
        type: string
        
  Territory:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      territoryUnstructured:
        type: string
      territoryAtomized:
        $ref: '#/definitions/TerritoryAtomized'
        
  TerritoryAtomized:
    properties:
      extentOfOccurrence:
        type: string
      areaOfOccupancy:
        type: string
  
  Habitats:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      habitatUnstructured:
        type: string
      habitatAtomized:
        type: array
        items:
          $ref: '#/definitions/HabitatAtomized'
          
  HabitatAtomized:
    properties:
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
      relatedTo:
        type: string
        
  Migratory:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      migratoryUnstructured:
        type: string
      additionalInformation:
        type: string
      dataObject:
        type: string
      migratoryAtomized:
        type: array
        items:
          $ref: '#/definitions/MigratoryAtomized'
          
  MigratoryAtomized:
    properties:
      causes:
        type: string
      patterns:
        type: string
      routes:
        type: string
      season:
        type: string
        
  MolecularData:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      molecularDataUnstructured:
        type: string
      molecularDataAtomized:
        type: array
        items:
          $ref: '#/definitions/MolecularDataAtomized'
  
  MolecularDataAtomized:
    properties:
      measurementOrFact: 
        $ref: '#/definitions/MolecularMeasurementOrFact'
      relatedTo:
        type: string
        
  MolecularMeasurementOrFact:
    properties:
      relatedTo:
        type: string
      MeasurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
          
  Interactions:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      interactionsUnstructured:
        type: string
      interactionsAtomized:
        type: array
        items:
          $ref: '#/definitions/InteractionsAtomized'
          
  InteractionsAtomized:
    properties:
      interactionSpecies:
        type: string
      interactionSpeciesType:
        type: array
        items:
          $ref: '#/definitions/Atomized'
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
          
  Behavior:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      behaviorUnstructured:
        type: string
      behaviorAtomized:
        type: array
        items:
          $ref: '#/definitions/Atomized'
        
  Dispersal:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      dispersalUnstructured:
        type: string
      dispersalAtomized:
        
        $ref: '#/definitions/DispersalAtomized'
          
  DispersalAtomized:
    properties:
      purpose:  
        type: string
      type:
        type: string
      structureDispersed:
        type: string
      distance:
        $ref: '#/definitions/Distance'
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
        
  Distance:
    properties:
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
        
  Feeding:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      feedingUnstructured:
        type: string
      feedingAtomized:
        type: array
        items:
          $ref: '#/definitions/FeedingAtomized'
          
  FeedingAtomized:
    properties:
      type:
        type: string
      thropic:
        type: array
        items:
          $ref: '#/definitions/Thropic'
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
        
  Thropic:
    properties:
      strategy:
        type: string
        
  Hierarchy:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      classification:
        type: string
      recommended::
        type: string
      kingdom:
        type: string
      phylum:
        type: string
      classHierarchy:
        type: string
      order:
        type: string
      family:
        type: string
      genus:
        type: string
      subgenus:
        type: string
      taxonRank:
        type: string
      specificEpithet:
        type: string
      infraspecificEpithet:
        type: string
      higherClassification:
        type: string
      parentTaxon:
        type: string
        
  AnnualCycles:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      annualCycleUnstructured:
        type: string
      annualCycleAtomized:
        type: array
        items:
          $ref: '#/definitions/AnnualCycleAtomized'
          
  AnnualCycleAtomized:
    properties:
      event: 
        type: string
      startTimeInterval:
        type: string
      endTimeInterval:
        type: string
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
        
  FullDescription:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      fullDescriptionUnstructured:
        type: string
      fullDescriptionAtomized:
        type: array
        items:
          $ref: '#/definitions/FullDescriptionAtomized'   
          
  FullDescriptionAtomized:
    properties:
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
  
  Reproduction:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      reproductionUnstructured:
        type: string
      reproductionAtomized:
        type: array
        items:
          $ref: '#/definitions/Atomized'
        
  Atomized:
    properties:
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact'
      ancillaryData:
        $ref: '#/definitions/AncillaryData'  
        
  IdentificationKeys:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      keys:
        type: string
        
  LifeCycle:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      lifeCycleAtomized:
        type: array
        items:
          $ref: '#/definitions/LifeCycleAtomized' 
          
  LifeCycleAtomized:
    properties:
      measurementOrFact:
        $ref: '#/definitions/MeasurementOrFact' 
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
          
  LifeForm:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      lifeFormAtomized:
        type: array
        items:
          $ref: '#/definitions/LifeFormAtomized' #**
          
  LifeFormAtomized:
    properties:
      measurementOrFact:
       $ref: '#/definitions/MeasurementOrFact'
      ancillaryData:
        $ref: '#/definitions/AncillaryData'
          
  MeasurementOrFact:
    properties:
      measurementID:
        type: string
      measurementType:
        type: string
      measurementValue:
        type: string
      measurementAccuracy:
        type: string
      measurementUnit:
        type: string
      measurementDeterminedDate: #**
        type: string
      measurementDeterminedBy:
        type: array
        items: 
          type: string
      measurementMethod:
        type: string
      measurementRemarks:
        type: string
      relatedTo:
        type: string
      
  
  CommonNamesAtomized:
    properties:
      name:
        type: string
      language:
        type: string
      synonymStatus:
        type: string
      usedIn:
        $ref: '#/definitions/Distribution' 
      usedBy:
        type: string
  
  Distribution:
    properties:
      distributionScope:
        $ref: '#/definitions/DistributionScope'
      temporalCoverage:
        $ref: '#/definitions/TemporalCoverage' 
      distributionAtomizedBranch:
        type: array
        items: 
          type: string
  
  DistributionScope:
    properties:
      type:
        type: string
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData' 
          
  TemporalCoverage:
    properties:
      startDate: 
        type: string
      endDate:
        type: string
        
  AncillaryData:
    properties:
      dataType:
        type: string 
      mimeType:
        type: string
      agent:
        type: array
        items:
          $ref: '#/definitions/Agent' 
      created:
        type: string
        #pattern: '^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$'
      modified:
        type: string
        #pattern: '^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$'
      title:
        type: string
      license:
        type: string
      rights:
        type: string
      rightsHolder:
        type: string
      bibliographicCitation:
        type: string
      audience:
        type: array
        items:
          type: string
      source :
        type: string
      subject:
        type: array
        items:
          type: string
      description:
        type: string
      mediaURL:
        type: array
        items:
          type: string
      thumbnailURL:
        type: string
      location:
        type: string
      geoPoint:
        type: string
      additionalInformation:
        type: string
      dataObject:
        type: string
      reference: 
        type: array
        items:
          $ref: '#/definitions/Reference'      
  
  Reference:
    properties:
      profile_id:
        type: string
      group_id:
        type: string
      created:
        type: string
        #pattern: '^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$'
      last_modified:
        type: string
        #pattern: '^\d{4}(-\d\d(-\d\d(T\d\d:\d\d(:\d\d)?(\.\d+)?(([+-]\d\d:\d\d)|Z)?)?)?)?$'
      identifiers:
        type: array
        items:
          type: string
      abstract:
        type: string
      type:
        type: string
      source: 
        type: string
      title:
        type: string
      authors:
        type: array
        items:
          type: string
      year:
        type: string
      volume: 
        type: string
      issue:
        type: string
      pages:
        type: string
      series:
        type: string
      chapter: 
        type: string
      websites:
        type: string
      accessed:
        type: string
      publisher:
        type: string
      address:
        type: string
      city:
        type: string
      edition:
        type: string
      institution:
        type: string
      editors:
        type: array
        items:
          type: string
      keywords:
        type: array
        items:
          type: string
      doi:
        type: string
      isbn:
        type: string
      issn:
        type: string
      link:
        type: string
      recordId:
        type: string
        
  SynonymsAtomized:
    properties:
      synonymStatus:
        type: string
      synonymName:
        $ref: '#/definitions/ScientificName' 
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
        
  ScientificName: 
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      attributes:
        $ref: '#/definitions/Attributes' 
      simple:
        type: string
      rank:
        type: string
      canonicalName: 
        $ref: '#/definitions/CanonicalName' 
      canonicalAuthorship:
        $ref: '#/definitions/CanonicalAuthorship'
      specialAuthorship:
        $ref: '#/definitions/SpecialAuthorship' 
      publishedln:
        $ref: '#/definitions/Publishedln'
      year:
        type: string
      microReference:
        type: string
      typificacion:
        $ref: '#/definitions/Typificacion' 
      typeNameEntity:
        $ref: '#/definitions/TypeNameEntity' 
      spellingCorrentionOf:
        type: array
        items:
          type: string
      basionym:
        $ref: '#/definitions/ScientificNameAux' 
      basedOn:
        $ref: '#/definitions/ScientificNameAux' 
      conservedAgainst :
        type: array
        items:
          type: string
      laterHomonymOf:
        $ref: '#/definitions/ScientificNameAux' 
      sanctioned:
        $ref: '#/definitions/ScientificNameAux' 
      replacementNameFor:
        $ref: '#/definitions/ScientificNameAux' 
      publicationStatus:
        $ref: '#/definitions/ScientificNameAux' 
      providerLink:
        type: string
      providerSpecificData:
        $ref: '#/definitions/ProviderSpecificData' 
  
  Attributes:
    properties:
      id:
        type: integer
      isAnamorphic:
        type: boolean
      nomenclaturalCode:
        type: string
        
  CanonicalName:
    properties:
      simple:
        type: string
      uninomial:
        type: string
      genus:
        $ref: '#/definitions/Genus' 
      epithet:
        $ref: '#/definitions/Epithet' 
  
  CanonicalAuthorship:
    properties:
      simple:
        type: string
      authorship:
        $ref: '#/definitions/Authorship' 
        
  SpecialAuthorship:
    properties:
      basionymAuthorship :
        $ref: '#/definitions/BasionymAuthorship' 
  
  Publishedln:
    properties:
      identifier:
        type: string
      datatype:
        type: string
      source:
        type: string
        
  Typificacion: 
    properties:
      simple: 
        type: string
      typeVoucherEntity:
        $ref: '#/definitions/TypeVoucherEntity' 
        
  TypeNameEntity:
    properties:
      nameReference: 
        $ref: '#/definitions/NameReference'
  
  ScientificNameAux:
    properties:
      ruleConsidered:
        type: string
      note:
        type: string
      relatedName:
        $ref: '#/definitions/RelatedNamePublished'
      publishedln:
        $ref: '#/definitions/RelatedNamePublished'
      microReference:
        type: string
        
  RelatedNamePublished: #*********
    properties:
      identifier:
        type: string
      datatype:
        type: string
      source: 
        type: string
        
  NameReference:
    properties:
      identifier:
        type: string
      datatype:
        type: string
      source:
        type: string
        
  TypeVoucherEntity:
    properties:
      voucherReference:
        type: array
        items:
          type: string
      lectotypePublicationVoucher:
        type: array
        items:
          type: string
      lectotypeMicroReferenceVoucher:
        type: array
        items:
          type: string
      typeOfType:
        type: string
        
  BasionymAuthorship:
    properties:
      simple:
        type: string
      year:
        type: array
        items:
          type: string
      authors:
        type: array
        items:
          type: string
      combinationAuthorship:
        type: array
        items:
          type: string
  
  Authorship:
    properties:
      simple:
        type: string
      authors:
        type: array
        items:
          type: string
          
  Genus:
    properties:
      ref:
        type: string
      linkType:
        type: string
        
  Epithet:
    properties:
      infragenericEpithe:
        type: string
      specificEpithet:
        type: string
      infraspecificEpithet:
        type: string
  
  ProviderSpecificData:
    properties:
      anyOne:
        type: array
        items:
          type: string
      anyTwo:
        type: string
          
  TaxonRecordName:
    properties:
      ancillaryData:
        type: array
        items:
          $ref: '#/definitions/AncillaryData'
      scientificName:
        $ref: '#/definitions/ScientificName'
        
  ListRecords:
    required:
     - id_user
     - records
    properties:
      id_user:
        type: string
      records:  
        type: array
        items:
          type: string
      created: 
        type: string
      updated: 
        type: string
      description: 
        type: string
      tags:
        type: array
        items:
          type: string
      group:
        type: string
          
  Group:
    required:
      - users
      - admins
    properties:
      users:
        type: array
        items:
          type: string
      admins:
        type: array
        items:
          type: string
      image: 
        type: string
      created: 
        type: string
      description: 
        type: string
      tags:
        type: array
        items:
          type: string
      records: 
        type: string
        items:
          type: string
        
          
  User:
    required:
      - id_user
    properties:
      id_user:
        type: string
        pattern: '^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
  
        
  ResultResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
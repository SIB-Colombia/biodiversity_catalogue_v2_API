{
  "swagger" : "2.0",
  "info" : {
    "description" : "API for SiB Colombia Catalogue. This API is used as a backend for consult the information of the species records reported in the SiB Colombia.",
    "version" : "1.5",
    "title" : "SiB Colombia - Catalogue API",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "name" : "SiB Colombia Developer Team",
      "url" : "http://www.sibcolombia.net",
      "email" : "oduque@humboldt.org.co"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "localhost:3000",
  "basePath" : "/api/v1.5",
  "tags" : [ {
    "name" : "record",
    "description" : "This API works against the SiB Colombia Records data store, which store all species records registered through Mamut editor."
  }, {
    "name" : "taxonRecordName",
    "description" : "A operation related with the element TaxonRecordName"
  }, {
    "name" : "AssociatedParty",
    "description" : "A operation related with the element AssociatedParty"
  } ],
  "schemes" : [ "http", "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/list/" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get a list of records",
        "operationId" : "getRecordList",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecordList"
              }
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/last_updated_records/" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get for last 5 updated records (scientificName and Id)",
        "operationId" : "getMostRecentRecordsUpdated",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecordList"
              }
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/last_updated_records/{numberRecords}" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get a ordered number of updated records (scientificName and Id)",
        "operationId" : "getMostRecentRecordsUpdatedNumber",
        "parameters" : [ {
          "name" : "numberRecords",
          "in" : "path",
          "description" : "the number of records in the result",
          "required" : true,
          "type" : "integer",
          "default" : 10,
          "maximum" : 1000,
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecordList"
              }
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/last_updated_records/{page}/{limit}" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get for last 5 updated records (scientificName and Id)",
        "operationId" : "getMostRecentRecordsUpdatedPagination",
        "parameters" : [ {
          "name" : "page",
          "in" : "path",
          "description" : "the page in the collection of Records",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        }, {
          "name" : "limit",
          "in" : "path",
          "description" : "size limit in the result of Records",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecordList"
              }
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/record/{id}" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get the latest version of a record",
        "operationId" : "lastRecord",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/complete-record/{id}" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get the latest version of a record",
        "operationId" : "completeLastRecordTest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/record-search/search" : {
      "get" : {
        "tags" : [ "Records" ],
        "description" : "Returns Records according to query parameters",
        "operationId" : "simpleSearchRecord",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "Simple search parameter.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "The maximum number of results to return. This can't be greater than 1000.",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "maximum" : 1000,
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RecordList"
              }
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "search"
    },
    "/record/legacy_id/{legacy_id}" : {
      "get" : {
        "tags" : [ "record" ],
        "description" : "get the latest version of a record using the id in the Catalogue V1",
        "operationId" : "lastRecordLegacyId",
        "parameters" : [ {
          "name" : "legacy_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "records"
    },
    "/record" : {
      "post" : {
        "tags" : [ "record" ],
        "description" : "Creates a new  Record with a taxonRecordNameVersion, that is the fisrt element and version of the created record.",
        "operationId" : "postRecord",
        "parameters" : [ {
          "in" : "body",
          "name" : "taxonRecordNameVersion",
          "description" : "taxonRecordNameVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaxonRecordNameVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/record/{id}/taxon_record_name/{version}" : {
      "get" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Returns a taxonRecordNameVersion by Record id and number of version",
        "operationId" : "getTaxonRecordName",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TaxonRecordNameVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/record/to_review/{id}/taxon_record_name" : {
      "get" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Returns a list of TaxonRecordNameVersion with state \"to_review\"",
        "operationId" : "getToReviewTaxonRecordName",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TaxonRecordNameVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/record/approved_in_use/{id}/taxon_record_name" : {
      "get" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Returns the taxonRecordNameVersion approved_in_use",
        "operationId" : "getLastApprovedInUseTaxonRecordName",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TaxonRecordNameVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/record/approved_in_use/{id}/taxon_record_name/{version}" : {
      "put" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Update a TaxonRecordNameVersion state to approved_in_use",
        "operationId" : "setApprovedInUseTaxonRecordName",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/record/{id}/taxon_record_name" : {
      "post" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Save a new taxonRecordNameVersion related with the a record with the id",
        "operationId" : "postTaxonRecordName",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "taxonRecordNameVersion",
          "description" : "taxonRecordNameVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaxonRecordNameVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/records/test/{id}/taxon_record_name" : {
      "post" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Save a new taxonRecordNameVersion related with the record with the id",
        "operationId" : "postTestTaxonRecordName",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "taxonRecordNameVersion",
          "description" : "taxonRecordNameVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TaxonRecordNameVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/records/test/approved_in_use/{id}/taxon_record_name" : {
      "get" : {
        "tags" : [ "taxonRecordName" ],
        "description" : "Returns the taxonRecordNameVersion approved_in_use",
        "operationId" : "getLastApprovedInUseTaxonRecordNameTest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TaxonRecordNameVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "taxonRecordName"
    },
    "/record/{id}/associated_party/{version}" : {
      "get" : {
        "tags" : [ "AssociatedParty" ],
        "description" : "Returns a AssociatedPartyVersion by record_id and number of version",
        "operationId" : "getAssociatedParty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AssociatedPartyVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "associatedParty"
    },
    "/record/{id}/associated_party" : {
      "post" : {
        "tags" : [ "AssociatedParty" ],
        "description" : "Save a new AssociatedPartyVersion related that belongs to the record with id",
        "operationId" : "postAssociatedParty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "associatedPartyVersion",
          "description" : "associatedPartyVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AssociatedPartyVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "associatedParty"
    },
    "/record/to_review/{id}/associated_party" : {
      "get" : {
        "tags" : [ "AssociatedParty" ],
        "description" : "Returns a list of AssociatedPartyVersion with state \"to_review\"",
        "operationId" : "getToReviewAssociatedParty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AssociatedPartyVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "associatedParty"
    },
    "/record/approved_in_use/{id}/associated_party" : {
      "get" : {
        "tags" : [ "AssociatedParty" ],
        "description" : "Returns the associatedParty version approved_in_use",
        "operationId" : "getLastApprovedInUseAssociatedParty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AssociatedPartyVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "associatedParty"
    },
    "/record/approved_in_use/{id}/associated_party/{version}" : {
      "put" : {
        "tags" : [ "AssociatedParty" ],
        "description" : "Update a AssociatedPartyVersion state to approved_in_use",
        "operationId" : "setApprovedInUseAssociatedParty",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "associatedParty"
    },
    "/record/{id}/common_names_atomized/{version}" : {
      "get" : {
        "tags" : [ "CommonNamesAtomized" ],
        "description" : "Returns a CommonNamesAtomizedVersion by record id and version",
        "operationId" : "getCommonNamesAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommonNamesAtomizedVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "commonNamesAtomized"
    },
    "/record/{id}/common_names_atomized" : {
      "post" : {
        "tags" : [ "CommonNamesAtomized" ],
        "description" : "Save a new CommonNamesAtomizedVersion that belongs to the record with id",
        "operationId" : "postCommonNamesAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "commonNamesAtomizedVersion",
          "description" : "commonNamesAtomizedVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CommonNamesAtomizedVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "commonNamesAtomized"
    },
    "/record/to_review/{id}/common_names_atomized" : {
      "get" : {
        "tags" : [ "CommonNamesAtomized" ],
        "description" : "Returns a list of CommonNamesAtomized version with state \"to_review\"",
        "operationId" : "getToReviewCommonNamesAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommonNamesAtomizedVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "commonNamesAtomized"
    },
    "/record/approved_in_use/{id}/common_names_atomized" : {
      "get" : {
        "tags" : [ "CommonNamesAtomized" ],
        "description" : "Returns the commonNamesAtomized version approved_in_use",
        "operationId" : "getLastApprovedInUseCommonNamesAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommonNamesAtomizedVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "commonNamesAtomized"
    },
    "/record/approved_in_use/{id}/common_names_atomized/{version}" : {
      "put" : {
        "tags" : [ "CommonNamesAtomized" ],
        "description" : "Update a CommonNamesAtomizedVersion state to approved_in_use",
        "operationId" : "setApprovedInUseCommonNamesAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "commonNamesAtomized"
    },
    "/record/{id}/synonyms_atomized/{version}" : {
      "get" : {
        "tags" : [ "SynonymsAtomized" ],
        "description" : "Returns a SynonymsAtomizedVersion by record_id and number of version",
        "operationId" : "getSynonymsAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SynonymsAtomizedVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "synonymsAtomized"
    },
    "/record/{id}/synonyms_atomized" : {
      "post" : {
        "tags" : [ "SynonymsAtomized" ],
        "description" : "Save a new SynonymsAtomizedVersion that belongs to the record with the id in the route",
        "operationId" : "postSynonymsAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "synonymsAtomizedVersion",
          "description" : "synonymsAtomizedVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SynonymsAtomizedVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "synonymsAtomized"
    },
    "/record/to_review/{id}/synonyms_atomized" : {
      "get" : {
        "tags" : [ "SynonymsAtomized" ],
        "description" : "Returns a list of SynonymsAtomizedVersion with state \"to_review\"",
        "operationId" : "getToReviewSynonymsAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SynonymsAtomizedVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "synonymsAtomized"
    },
    "/record/approved_in_use/{id}/synonyms_atomized" : {
      "get" : {
        "tags" : [ "SynonymsAtomized" ],
        "description" : "Returns the synonymsAtomizedVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseSynonymsAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SynonymsAtomizedVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "synonymsAtomized"
    },
    "/record/approved_in_use/{id}/synonyms_atomized/{version}" : {
      "put" : {
        "tags" : [ "SynonymsAtomized" ],
        "description" : "Update a SynonymsAtomizedVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseSynonymsAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "synonymsAtomized"
    },
    "/record/{id}/life_cycle/{version}" : {
      "get" : {
        "tags" : [ "LifeCycle" ],
        "description" : "Returns a LifeCycleVersion by id_record and number of version",
        "operationId" : "getLifeCycle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LifeCycleVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeCycle"
    },
    "/record/{id}/life_cycle" : {
      "post" : {
        "tags" : [ "LifeCycle" ],
        "description" : "Save a new LifeCycleVersion that belongs to the record with the id in the route",
        "operationId" : "postLifeCycle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "lifeCycleVersion",
          "description" : "lifeCycleVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LifeCycleVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeCycle"
    },
    "/record/to_review/{id}/life_cycle" : {
      "get" : {
        "tags" : [ "LifeCycle" ],
        "description" : "Returns a list of LifeCycleVersion with state \"to_review\"",
        "operationId" : "getToReviewLifeCycle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LifeCycleVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeCycle"
    },
    "/record/approved_in_use/{id}/life_cycle" : {
      "get" : {
        "tags" : [ "LifeCycle" ],
        "description" : "Returns the lifeCycleVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseLifeCycle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LifeCycleVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeCycle"
    },
    "/record/approved_in_use/{id}/life_cycle/{version}" : {
      "put" : {
        "tags" : [ "LifeCycle" ],
        "description" : "Update a LifeCycleVersion state to approved_in_use",
        "operationId" : "setApprovedInUseLifeCycle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeCycle"
    },
    "/record/{id}/life_form/{version}" : {
      "get" : {
        "tags" : [ "LifeForm" ],
        "description" : "Returns a LifeFormVersion by id_record and number of version",
        "operationId" : "getLifeForm",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LifeFormVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeForm"
    },
    "/record/{id}/life_form" : {
      "post" : {
        "tags" : [ "LifeForm" ],
        "description" : "Save a new LifeFormVersion that belongs to the record with the id in the route",
        "operationId" : "postLifeForm",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "lifeFormVersion",
          "description" : "lifeFormVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LifeFormVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeForm"
    },
    "/record/to_review/{id}/life_form" : {
      "get" : {
        "tags" : [ "LifeForm" ],
        "description" : "Returns a list of LifeFormVersion with state \"to_review\"",
        "operationId" : "getToReviewLifeForm",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LifeFormVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeForm"
    },
    "/record/approved_in_use/{id}/life_form" : {
      "get" : {
        "tags" : [ "LifeForm" ],
        "description" : "Returns the lifeFormVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseLifeForm",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LifeFormVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeForm"
    },
    "/record/approved_in_use/{id}/life_form/{version}" : {
      "put" : {
        "tags" : [ "LifeForm" ],
        "description" : "Update a LifeFormVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseLifeForm",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "lifeForm"
    },
    "/record/{id}/identification_keys/{version}" : {
      "get" : {
        "tags" : [ "IdentificationKeys" ],
        "description" : "Returns a IdentificationKeysVersion by id_record and number of version",
        "operationId" : "getIdentificationKeys",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/IdentificationKeysVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "identificationKeys"
    },
    "/record/{id}/identification_keys" : {
      "post" : {
        "tags" : [ "IdentificationKeys" ],
        "description" : "Save a new IdentificationKeysVersion that belongs to the record with the id in the route",
        "operationId" : "postIdentificationKeys",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "identificationKeysVersion",
          "description" : "identificationKeysVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdentificationKeysVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "identificationKeys"
    },
    "/record/to_review/{id}/identification_keys" : {
      "get" : {
        "tags" : [ "IdentificationKeys" ],
        "description" : "Returns a list of IdentificationKeysVersion with state \"to_review\"",
        "operationId" : "getToReviewIdentificationKeys",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/IdentificationKeysVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "identificationKeys"
    },
    "/record/approved_in_use/{id}/identification_keys" : {
      "get" : {
        "tags" : [ "IdentificationKeys" ],
        "description" : "Returns the identificationKeysVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseIdentificationKeys",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/IdentificationKeysVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "identificationKeys"
    },
    "/record/approved_in_use/{id}/identification_keys/{version}" : {
      "put" : {
        "tags" : [ "IdentificationKeys" ],
        "description" : "Update a IdentificationKeysVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseIdentificationKeys",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "identificationKeys"
    },
    "/record/{id}/full_description/{version}" : {
      "get" : {
        "tags" : [ "FullDescription" ],
        "description" : "Returns a FullDescriptionVersion by id_record and number of version",
        "operationId" : "getFullDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FullDescriptionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "fullDescription"
    },
    "/record/{id}/full_description" : {
      "post" : {
        "tags" : [ "FullDescription" ],
        "description" : "Save a new  FullDescriptionVersion that belongs to the record with the id in the route",
        "operationId" : "postFullDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "fullDescriptionVersion",
          "description" : "fullDescriptionVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FullDescriptionVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "fullDescription"
    },
    "/record/to_review/{id}/full_description" : {
      "get" : {
        "tags" : [ "FullDescription" ],
        "description" : "Returns a list of FullDescriptionVersion with state \"to_review\"",
        "operationId" : "getToReviewFullDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FullDescriptionVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "fullDescription"
    },
    "/record/approved_in_use/{id}/full_description" : {
      "get" : {
        "tags" : [ "FullDescription" ],
        "description" : "Returns the FullDescriptionVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseFullDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FullDescriptionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "fullDescription"
    },
    "/record/approved_in_use/{id}/full_description/{version}" : {
      "put" : {
        "tags" : [ "FullDescription" ],
        "description" : "Update a FullDescriptionVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseFullDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "fullDescription"
    },
    "/record/{id}/abstract/{version}" : {
      "get" : {
        "tags" : [ "Abstract" ],
        "description" : "Returns a AbstractVersion by id_record and number of version",
        "operationId" : "getAbstract",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AbstractVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "abstract"
    },
    "/record/{id}/abstract" : {
      "post" : {
        "tags" : [ "Abstract" ],
        "description" : "Save a new AbstractVersion that belongs to the record with the id in the route",
        "operationId" : "postAbstract",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "abstractVersion",
          "description" : "abstractVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AbstractVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "abstract"
    },
    "/record/to_review/{id}/abstract" : {
      "get" : {
        "tags" : [ "Abstract" ],
        "description" : "Returns a list of AbstractVersion with state \"to_review\"",
        "operationId" : "getToReviewAbstract",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AbstractVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "abstract"
    },
    "/record/approved_in_use/{id}/abstract" : {
      "get" : {
        "tags" : [ "Abstract" ],
        "description" : "Returns the AbstractVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseAbstract",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AbstractVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "abstract"
    },
    "/record/approved_in_use/{id}/abstract/{version}" : {
      "put" : {
        "tags" : [ "Abstract" ],
        "description" : "Update a AbstractVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseAbstract",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "abstract"
    },
    "/record/{id}/hierarchy/{version}" : {
      "get" : {
        "tags" : [ "Hierarchy" ],
        "description" : "Returns a HierarchyVersion element by record id and version",
        "operationId" : "getHierarchy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HierarchyVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "hierarchy"
    },
    "/record/{id}/hierarchy" : {
      "post" : {
        "tags" : [ "Hierarchy" ],
        "description" : "Save a new HierarchyVersion that belongs to the record with the id in the route",
        "operationId" : "postHierarchy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "hierarchyVersion",
          "description" : "hierarchyVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HierarchyVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "hierarchy"
    },
    "/record/to_review/{id}/hierarchy" : {
      "get" : {
        "tags" : [ "Hierarchy" ],
        "description" : "Returns a list of HierarchyVersion with state \"to_review\"",
        "operationId" : "getToReviewHierarchy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HierarchyVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "hierarchy"
    },
    "/record/approved_in_use/{id}/hierarchy" : {
      "get" : {
        "tags" : [ "Hierarchy" ],
        "description" : "Returns the HierarchyVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseHierarchy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HierarchyVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "hierarchy"
    },
    "/record/approved_in_use/{id}/hierarchy/{version}" : {
      "put" : {
        "tags" : [ "Hierarchy" ],
        "description" : "Update a HierarchyVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseHierarchy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "hierarchy"
    },
    "/record/{id}/reproduction/{version}" : {
      "get" : {
        "tags" : [ "Reproduction" ],
        "description" : "Returns a ReproductionVersion by id_record and number of version",
        "operationId" : "getReproduction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReproductionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "reproduction"
    },
    "/record/{id}/reproduction" : {
      "post" : {
        "tags" : [ "Reproduction" ],
        "description" : "Save a new ReproductionVersion that belongs to the record with the id in the route",
        "operationId" : "postReproduction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "reproductionVersion",
          "description" : "reproductionVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReproductionVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "reproduction"
    },
    "/record/to_review/{id}/reproduction" : {
      "get" : {
        "tags" : [ "Reproduction" ],
        "description" : "Returns a list of ReproductionVersion with state \"to_review\"",
        "operationId" : "getToReviewReproduction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReproductionVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "reproduction"
    },
    "/record/approved_in_use/{id}/reproduction" : {
      "get" : {
        "tags" : [ "Reproduction" ],
        "description" : "Returns the ReproductionVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseReproduction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReproductionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "reproduction"
    },
    "/record/approved_in_use/{id}/reproduction/{version}" : {
      "put" : {
        "tags" : [ "Reproduction" ],
        "description" : "Update a ReproductionVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseReproduction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "reproduction"
    },
    "/record/{id}/annual_cycles/{version}" : {
      "get" : {
        "tags" : [ "AnnualCycles" ],
        "description" : "Returns an AnnualCyclesVersion by id_record and number of version",
        "operationId" : "getAnnualCycles",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AnnualCyclesVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "annualCycles"
    },
    "/record/{id}/annual_cycles" : {
      "post" : {
        "tags" : [ "AnnualCycles" ],
        "description" : "Save a new AnnualCyclesVersion that belongs to the record with the id in the route",
        "operationId" : "postAnnualCycles",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "AnnualCyclesVersion",
          "description" : "AnnualCyclesVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AnnualCyclesVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "annualCycles"
    },
    "/record/to_review/{id}/annual_cycles" : {
      "get" : {
        "tags" : [ "AnnualCycles" ],
        "description" : "Returns a list of AnnualCyclesVersion with state \"to_review\"",
        "operationId" : "getToReviewAnnualCycles",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AnnualCyclesVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "annualCycles"
    },
    "/record/approved_in_use/{id}/annual_cycles" : {
      "get" : {
        "tags" : [ "AnnualCycles" ],
        "description" : "Returns the annualCycles with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseAnnualCycles",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AnnualCyclesVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "annualCycles"
    },
    "/record/approved_in_use/{id}/annual_cycles/{version}" : {
      "put" : {
        "tags" : [ "AnnualCycles" ],
        "description" : "Update a AnnualCyclesVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseAnnualCycles",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "annualCycles"
    },
    "/record/{id}/feeding/{version}" : {
      "get" : {
        "tags" : [ "Feeding" ],
        "description" : "Returns a FeedingVersion by id_record and number of version",
        "operationId" : "getFeeding",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FeedingVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "feeding"
    },
    "/record/{id}/feeding" : {
      "post" : {
        "tags" : [ "Feeding" ],
        "description" : "Save a new FeedingVersion that belongs to the record with the id in the route",
        "operationId" : "postFeeding",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "FeedingVersion",
          "description" : "FeedingVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FeedingVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "feeding"
    },
    "/record/to_review/{id}/feeding" : {
      "get" : {
        "tags" : [ "Feeding" ],
        "description" : "Returns a list of FeedingVersion with state \"to_review\"",
        "operationId" : "getToReviewFeeding",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FeedingVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "feeding"
    },
    "/record/approved_in_use/{id}/feeding" : {
      "get" : {
        "tags" : [ "Feeding" ],
        "description" : "Returns the FeedingVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseFeeding",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FeedingVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "feeding"
    },
    "/record/approved_in_use/{id}/feeding/{version}" : {
      "put" : {
        "tags" : [ "Feeding" ],
        "description" : "Update a FeedingVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseFeeding",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "feeding"
    },
    "/record/{id}/dispersal/{version}" : {
      "get" : {
        "tags" : [ "Dispersal" ],
        "description" : "Returns a DispersalVersion by id_record and number of version",
        "operationId" : "getDispersal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DispersalVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "dispersal"
    },
    "/record/{id}/dispersal" : {
      "post" : {
        "tags" : [ "Dispersal" ],
        "description" : "Save a new DispersalVersion that belongs to the record with the id in the route",
        "operationId" : "postDispersal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "DispersalVersion",
          "description" : "DispersalVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DispersalVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "dispersal"
    },
    "/record/to_review/{id}/dispersal" : {
      "get" : {
        "tags" : [ "Dispersal" ],
        "description" : "Returns a list of DispersalVersion with state \"to_review\"",
        "operationId" : "getToReviewDispersal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DispersalVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "dispersal"
    },
    "/record/approved_in_use/{id}/dispersal" : {
      "get" : {
        "tags" : [ "Dispersal" ],
        "description" : "Returns the DispersalVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseDispersal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DispersalVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "dispersal"
    },
    "/record/approved_in_use/{id}/dispersal/{version}" : {
      "put" : {
        "tags" : [ "Dispersal" ],
        "description" : "Update a DispersalVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseDispersal",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "dispersal"
    },
    "/record/{id}/behavior/{version}" : {
      "get" : {
        "tags" : [ "Behavior" ],
        "description" : "Returns a BehaviorVersion by id_record and number of version",
        "operationId" : "getBehavior",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BehaviorVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "behavior"
    },
    "/record/{id}/behavior" : {
      "post" : {
        "tags" : [ "Behavior" ],
        "description" : "Save a new BehaviorVersion that belongs to the record with the id in the route",
        "operationId" : "postBehavior",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "BehaviorVersion",
          "description" : "BehaviorVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BehaviorVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "behavior"
    },
    "/record/to_review/{id}/behavior" : {
      "get" : {
        "tags" : [ "Behavior" ],
        "description" : "Returns a list of BehaviorVersion with state \"to_review\"",
        "operationId" : "getToReviewBehavior",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BehaviorVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "behavior"
    },
    "/record/approved_in_use/{id}/behavior" : {
      "get" : {
        "tags" : [ "Behavior" ],
        "description" : "Returns the BehaviorVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseBehavior",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BehaviorVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "behavior"
    },
    "/record/approved_in_use/{id}/behavior/{version}" : {
      "put" : {
        "tags" : [ "Behavior" ],
        "description" : "Update a BehaviorVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseBehavior",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "behavior"
    },
    "/record/{id}/interactions/{version}" : {
      "get" : {
        "tags" : [ "Interactions" ],
        "description" : "Returns a InteractionsVersion by id_record and number of version",
        "operationId" : "getInteractions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InteractionsVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "interactions"
    },
    "/record/{id}/interactions" : {
      "post" : {
        "tags" : [ "Interactions" ],
        "description" : "Save a new InteractionsVersion that belongs to the record with the id in the route",
        "operationId" : "postInteractions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "InteractionsVersion",
          "description" : "InteractionsVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InteractionsVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "interactions"
    },
    "/record/to_review/{id}/interactions" : {
      "get" : {
        "tags" : [ "Interactions" ],
        "description" : "Returns a list of InteractionsVersion with state \"to_review\"",
        "operationId" : "getToReviewInteractions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InteractionsVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "interactions"
    },
    "/record/approved_in_use/{id}/interactions" : {
      "get" : {
        "tags" : [ "Interactions" ],
        "description" : "Returns the InteractionsVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseInteractions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InteractionsVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "interactions"
    },
    "/record/approved_in_use/{id}/interactions/{version}" : {
      "put" : {
        "tags" : [ "Interactions" ],
        "description" : "Update a InteractionsVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseInteractions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "interactions"
    },
    "/record/{id}/molecular_data/{version}" : {
      "get" : {
        "tags" : [ "MolecularData" ],
        "description" : "Returns a MolecularDataVersion by id_record and number of version",
        "operationId" : "getMolecularData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MolecularDataVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "molecularData"
    },
    "/record/{id}/molecular_data" : {
      "post" : {
        "tags" : [ "MolecularData" ],
        "description" : "Save a new MolecularDataVersion that belongs to the record with the id in the route",
        "operationId" : "postMolecularData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MolecularDataVersion",
          "description" : "MolecularDataVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MolecularDataVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "molecularData"
    },
    "/record/to_review/{id}/molecular_data" : {
      "get" : {
        "tags" : [ "MolecularData" ],
        "description" : "Returns a list of MolecularDataVersion with state \"to_review\"",
        "operationId" : "getToReviewMolecularData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MolecularDataVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "molecularData"
    },
    "/record/approved_in_use/{id}/molecular_data" : {
      "get" : {
        "tags" : [ "MolecularData" ],
        "description" : "Returns the molecularDataVersion  with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseMolecularData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MolecularDataVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "molecularData"
    },
    "/record/approved_in_use/{id}/molecular_data/{version}" : {
      "put" : {
        "tags" : [ "MolecularData" ],
        "description" : "Update a MolecularDataVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseMolecularData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "molecularData"
    },
    "/record/{id}/migratory/{version}" : {
      "get" : {
        "tags" : [ "Migratory" ],
        "description" : "Returns MigratoryVersion by id_record and number of version",
        "operationId" : "getMigratory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MigratoryVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "migratory"
    },
    "/record/{id}/migratory" : {
      "post" : {
        "tags" : [ "Migratory" ],
        "description" : "Save a new MigratoryVersion that belongs to the record with the id in the route",
        "operationId" : "postMigratory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "migratory",
          "description" : "MigratoryVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MigratoryVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "migratory"
    },
    "/record/to_review/{id}/migratory" : {
      "get" : {
        "tags" : [ "Migratory" ],
        "description" : "Returns a list of MigratoryVersion with state \"to_review\"",
        "operationId" : "getToReviewMigratory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MigratoryVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "migratory"
    },
    "/record/approved_in_use/{id}/migratory" : {
      "get" : {
        "tags" : [ "Migratory" ],
        "description" : "Returns the MigratoryVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseMigratory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MigratoryVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "migratory"
    },
    "/record/approved_in_use/{id}/migratory/{version}" : {
      "put" : {
        "tags" : [ "Migratory" ],
        "description" : "Update a MigratoryVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseMigratory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "migratory"
    },
    "/record/{id}/habitats/{version}" : {
      "get" : {
        "tags" : [ "Habitats" ],
        "description" : "Returns a HabitatsVersion by id_record and number of version",
        "operationId" : "getHabitats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HabitatsVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "habitats"
    },
    "/record/{id}/habitats" : {
      "post" : {
        "tags" : [ "Habitats" ],
        "description" : "Save a new HabitatsVersion that belongs to the record with the id in the route",
        "operationId" : "postHabitats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "HabitatsVersion",
          "description" : "HabitatsVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/HabitatsVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "habitats"
    },
    "/record/to_review/{id}/habitats" : {
      "get" : {
        "tags" : [ "Habitats" ],
        "description" : "Returns a list of HabitatsVersion with state \"to_review\"",
        "operationId" : "getToReviewHabitats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HabitatsVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "habitats"
    },
    "/record/approved_in_use/{id}/habitats" : {
      "get" : {
        "tags" : [ "Habitats" ],
        "description" : "Returns the HabitatsVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseHabitats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HabitatsVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "habitats"
    },
    "/record/approved_in_use/{id}/habitats/{version}" : {
      "put" : {
        "tags" : [ "Habitats" ],
        "description" : "Update a HabitatsVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseHabitats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "habitats"
    },
    "/record/{id}/distribution/{version}" : {
      "get" : {
        "tags" : [ "Distribution" ],
        "description" : "Returns a DistributionVersion by id_record and number of version",
        "operationId" : "getDistribution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DistributionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "distribution"
    },
    "/record/{id}/distribution" : {
      "post" : {
        "tags" : [ "Distribution" ],
        "description" : "Save a new DistributionVersion that belongs to the record with the id in the route",
        "operationId" : "postDistribution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "distribution",
          "description" : "DistributionVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DistributionVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "distribution"
    },
    "/record/to_review/{id}/distribution" : {
      "get" : {
        "tags" : [ "Distribution" ],
        "description" : "Returns a list of DistributionVersion with state \"to_review\"",
        "operationId" : "getToReviewDistribution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DistributionVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "distribution"
    },
    "/record/approved_in_use/{id}/distribution" : {
      "get" : {
        "tags" : [ "Distribution" ],
        "description" : "Returns the DistributionVersion  with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseDistribution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DistributionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "distribution"
    },
    "/record/approved_in_use/{id}/distribution/{version}" : {
      "put" : {
        "tags" : [ "Distribution" ],
        "description" : "Update a DistributionVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseDistribution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "distribution"
    },
    "/record/{id}/territory/{version}" : {
      "get" : {
        "tags" : [ "Territory" ],
        "description" : "Returns a TerritoryVersion by id_record and number of version",
        "operationId" : "getTerritory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TerritoryVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "territory"
    },
    "/record/{id}/territory" : {
      "post" : {
        "tags" : [ "Territory" ],
        "description" : "Save a TerritoryVersion that belongs to the record with the id in the route",
        "operationId" : "postTerritory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "territory",
          "description" : "TerritoryVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TerritoryVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "territory"
    },
    "/record/to_review/{id}/territory" : {
      "get" : {
        "tags" : [ "Territory" ],
        "description" : "Returns a list of TerritoryVersion with state \"to_review\"",
        "operationId" : "getToReviewTerritory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TerritoryVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "territory"
    },
    "/record/approved_in_use/{id}/territory" : {
      "get" : {
        "tags" : [ "Territory" ],
        "description" : "Returns the TerritoryVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseTerritory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TerritoryVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "territory"
    },
    "/record/approved_in_use/{id}/territory/{version}" : {
      "put" : {
        "tags" : [ "Territory" ],
        "description" : "Update a TerritoryVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseTerritory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "territory"
    },
    "/record/{id}/population_biology/{version}" : {
      "get" : {
        "tags" : [ "PopulationBiology" ],
        "description" : "Returns a PopulationBiologyVersion by id_record and number of version",
        "operationId" : "getPopulationBiology",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PopulationBiologyVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "populationBiology"
    },
    "/record/{id}/population_biology" : {
      "post" : {
        "tags" : [ "PopulationBiology" ],
        "description" : "Save a new PopulationBiologyVersion that belongs to the record with the id in the route",
        "operationId" : "postPopulationBiology",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "populationBiology",
          "description" : "PopulationBiologyVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PopulationBiologyVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "populationBiology"
    },
    "/record/to_review/{id}/population_biology" : {
      "get" : {
        "tags" : [ "PopulationBiology" ],
        "description" : "Returns a list of PopulationBiologyVersion with state \"to_review\"",
        "operationId" : "getToReviewPopulationBiology",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PopulationBiologyVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "populationBiology"
    },
    "/record/approved_in_use/{id}/population_biology" : {
      "get" : {
        "tags" : [ "PopulationBiology" ],
        "description" : "Returns the PopulationBiologyVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUsePopulationBiology",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PopulationBiologyVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "populationBiology"
    },
    "/record/approved_in_use/{id}/population_biology/{version}" : {
      "put" : {
        "tags" : [ "PopulationBiology" ],
        "description" : "Update a PopulationBiologyVersion with state \"approved_in_use\"",
        "operationId" : "setApprovedInUsePopulationBiology",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "populationBiology"
    },
    "/record/{id}/threat_status/{version}" : {
      "get" : {
        "tags" : [ "ThreatStatus" ],
        "description" : "Returns a ThreatStatusVersion by id_record and number of version",
        "operationId" : "getThreatStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ThreatStatusVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "threatStatus"
    },
    "/record/{id}/threat_status" : {
      "post" : {
        "tags" : [ "ThreatStatus" ],
        "description" : "Save a new ThreatStatusVersion that belongs to the record with the id in the path",
        "operationId" : "postThreatStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "threatStatus",
          "description" : "ThreatStatusVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ThreatStatusVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "threatStatus"
    },
    "/record/to_review/{id}/threat_status" : {
      "get" : {
        "tags" : [ "ThreatStatus" ],
        "description" : "Returns a list of ThreatStatus version with state \"to_review\"",
        "operationId" : "getToReviewThreatStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ThreatStatusVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "threatStatus"
    },
    "/record/approved_in_use/{id}/threat_status" : {
      "get" : {
        "tags" : [ "ThreatStatus" ],
        "description" : "Returns the ThreatStatusVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseThreatStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ThreatStatusVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "threatStatus"
    },
    "/record/approved_in_use/{id}/threat_status/{version}" : {
      "put" : {
        "tags" : [ "ThreatStatus" ],
        "description" : "Update a ThreatStatusVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseThreatStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "threatStatus"
    },
    "/record/{id}/legislation/{version}" : {
      "get" : {
        "tags" : [ "Legislation" ],
        "description" : "Returns a LegislationVersion by id_record and number of version",
        "operationId" : "getLegislation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LegislationVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "legislation"
    },
    "/record/{id}/legislation" : {
      "post" : {
        "tags" : [ "Legislation" ],
        "description" : "Save a new LegislationVersion that belongs to the record with the id in the path",
        "operationId" : "postLegislation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "legislation",
          "description" : "LegislationVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LegislationVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "legislation"
    },
    "/record/to_review/{id}/legislation" : {
      "get" : {
        "tags" : [ "Legislation" ],
        "description" : "Returns a list of LegislationVersion with state \"to_review\"",
        "operationId" : "getToReviewLegislation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LegislationVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "legislation"
    },
    "/record/approved_in_use/{id}/legislation" : {
      "get" : {
        "tags" : [ "Legislation" ],
        "description" : "Returns the LegislationVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseLegislation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/LegislationVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "legislation"
    },
    "/record/approved_in_use/{id}/legislation/{version}" : {
      "put" : {
        "tags" : [ "Legislation" ],
        "description" : "Update a LegislationVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseLegislation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "legislation"
    },
    "/record/{id}/uses_management_conservation/{version}" : {
      "get" : {
        "tags" : [ "UsesManagementAndConservation" ],
        "description" : "Returns a UsesManagementAndConservationVersion by id_record and number of version",
        "operationId" : "getUsesManagementAndConservation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UsesManagementAndConservationVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "usesManagementAndConservation"
    },
    "/record/{id}/uses_management_conservation" : {
      "post" : {
        "tags" : [ "UsesManagementAndConservation" ],
        "description" : "Save a new UsesManagementAndConservationVersion that belongs to the record with the id in the path",
        "operationId" : "postUsesManagementAndConservation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "usesManagementAndConservation",
          "description" : "UsesManagementAndConservationVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsesManagementAndConservationVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "usesManagementAndConservation"
    },
    "/record/to_review/{id}/uses_management_conservation" : {
      "get" : {
        "tags" : [ "UsesManagementAndConservation" ],
        "description" : "Returns a list of UsesManagementAndConservationVersion with state \"to_review\"",
        "operationId" : "getToReviewUsesManagementAndConservation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UsesManagementAndConservationVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "usesManagementAndConservation"
    },
    "/record/approved_in_use/{id}/uses_management_conservation" : {
      "get" : {
        "tags" : [ "UsesManagementAndConservation" ],
        "description" : "Returns the UsesManagementAndConservationVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseUsesManagementAndConservation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/UsesManagementAndConservationVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "usesManagementAndConservation"
    },
    "/record/approved_in_use/{id}/uses_management_conservation/{version}" : {
      "put" : {
        "tags" : [ "UsesManagementAndConservation" ],
        "description" : "Update a UsesManagementAndConservationVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseUsesManagementAndConservation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "usesManagementAndConservation"
    },
    "/record/{id}/direct_threats/{version}" : {
      "get" : {
        "tags" : [ "DirectThreats" ],
        "description" : "Returns a DirectThreatsVersion by id_record and number of version",
        "operationId" : "getDirectThreats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the record(ficha)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Version of the element",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DirectThreatsVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "directThreats"
    },
    "/record/{id}/direct_threats" : {
      "post" : {
        "tags" : [ "DirectThreats" ],
        "description" : "Save a new version DirectThreatsVersion that belongs to the record with the id in the path",
        "operationId" : "postDirectThreats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "directThreats",
          "description" : "DirectThreatsVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DirectThreatsVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "directThreats"
    },
    "/record/to_review/{id}/direct_threats" : {
      "get" : {
        "tags" : [ "DirectThreats" ],
        "description" : "Returns a list of DirectThreatsVersion with state \"to_review\"",
        "operationId" : "getToReviewDirectThreats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DirectThreatsVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "directThreats"
    },
    "/record/approved_in_use/{id}/direct_threats" : {
      "get" : {
        "tags" : [ "DirectThreats" ],
        "description" : "Returns the DirectThreatsVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseDirectThreats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DirectThreatsVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "directThreats"
    },
    "/record/approved_in_use/{id}/direct_threats/{version}" : {
      "put" : {
        "tags" : [ "DirectThreats" ],
        "description" : "Update a DirectThreatsVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseDirectThreats",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "directThreats"
    },
    "/record/{id}/endemic_atomized/{version}" : {
      "get" : {
        "tags" : [ "EndemicAtomized" ],
        "description" : "Returns an EndemicAtomizedVersion by id_record and number of version",
        "operationId" : "getEndemicAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EndemicAtomizedVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "endemicAtomized"
    },
    "/record/{id}/endemic_atomized" : {
      "post" : {
        "tags" : [ "EndemicAtomized" ],
        "description" : "Save a new EndemicAtomizedVersion that belongs to the record with the id in the path",
        "operationId" : "postEndemicAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "endemicAtomized",
          "description" : "EndemicAtomizedVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EndemicAtomizedVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "endemicAtomized"
    },
    "/record/to_review/{id}/endemic_atomized" : {
      "get" : {
        "tags" : [ "EndemicAtomized" ],
        "description" : "Returns a list of EndemicAtomizedVersion with state \"to_review\"",
        "operationId" : "getToReviewEndemicAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EndemicAtomizedVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "endemicAtomized"
    },
    "/record/approved_in_use/{id}/endemic_atomized" : {
      "get" : {
        "tags" : [ "EndemicAtomized" ],
        "description" : "Returns the EndemicAtomizedVersion with state \"approved_in_use\"",
        "operationId" : "getLastApprovedInUseEndemicAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EndemicAtomizedVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "endemicAtomized"
    },
    "/record/approved_in_use/{id}/endemic_atomized/{version}" : {
      "put" : {
        "tags" : [ "EndemicAtomized" ],
        "description" : "Update a EndemicAtomizedVersion state to \"approved_in_use\"",
        "operationId" : "setApprovedInUseEndemicAtomized",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "endemicAtomized"
    },
    "/record/{id}/references/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a References element by record id and version",
        "operationId" : "getReferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReferencesVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "references"
    },
    "/record/{id}/references" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a References element which belongs to record with id in the url",
        "operationId" : "postReferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "reference",
          "description" : "ReferencesVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReferencesVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "references"
    },
    "/record/to_review/{id}/references" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of References version with state \"to_review\"",
        "operationId" : "getToReviewReferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReferencesVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "references"
    },
    "/record/approved_in_use/{id}/references" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the references version approved_in_use",
        "operationId" : "getLastApprovedInUseReferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ReferencesVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "references"
    },
    "/record/approved_in_use/{id}/references/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a ReferencesVersion state to approved_in_use",
        "operationId" : "setApprovedInUseReferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "references"
    },
    "/record/{id}/environmental_envelope/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a EnvironmentalEnvelope element by record id and version",
        "operationId" : "getEnvironmentalEnvelope",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EnvironmentalEnvelopeVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "environmentalEnvelope"
    },
    "/record/{id}/environmental_envelope" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a EnvironmentalEnvelope element which belongs to record with id in the url",
        "operationId" : "postEnvironmentalEnvelope",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "environmentalEnvelope",
          "description" : "EnvironmentalEnvelopeVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EnvironmentalEnvelopeVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "environmentalEnvelope"
    },
    "/record/to_review/{id}/environmental_envelope" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of EnvironmentalEnvelope version with state \"to_review\"",
        "operationId" : "getToReviewEnvironmentalEnvelope",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EnvironmentalEnvelopeVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "environmentalEnvelope"
    },
    "/record/approved_in_use/{id}/environmental_envelope" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the environmentalEnvelope version approved_in_use",
        "operationId" : "getLastApprovedInUseEnvironmentalEnvelope",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EnvironmentalEnvelopeVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "environmentalEnvelope"
    },
    "/record/approved_in_use/{id}/environmental_envelope/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a EnvironmentalEnvelopeVersion state to approved_in_use",
        "operationId" : "setApprovedInUseEnvironmentalEnvelope",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "environmentalEnvelope"
    },
    "/record/{id}/ecological_significance/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a EcologicalSignificance element by record id and version",
        "operationId" : "getEcologicalSignificance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EcologicalSignificanceVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ecologicalSignificance"
    },
    "/record/{id}/ecological_significance" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a EcologicalSignificance element which belongs to record with id in the url",
        "operationId" : "postEcologicalSignificance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ecologicalSignificance",
          "description" : "EcologicalSignificanceVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EcologicalSignificanceVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ecologicalSignificance"
    },
    "/record/to_review/{id}/ecological_significance" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of EcologicalSignificance version with state \"to_review\"",
        "operationId" : "getToReviewEcologicalSignificance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EcologicalSignificanceVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ecologicalSignificance"
    },
    "/record/approved_in_use/{id}/ecological_significance" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the ecologicalSignificance version approved_in_use",
        "operationId" : "getLastApprovedInUseEcologicalSignificance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/EcologicalSignificanceVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ecologicalSignificance"
    },
    "/record/approved_in_use/{id}/ecological_significance/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a EcologicalSignificanceVersion state to approved_in_use",
        "operationId" : "setApprovedInUseEcologicalSignificance",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ecologicalSignificance"
    },
    "/record/{id}/invasiveness/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a Invasiveness element by record id and version",
        "operationId" : "getInvasiveness",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InvasivenessVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "invasiveness"
    },
    "/record/{id}/invasiveness" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a Invasiveness element which belongs to record with id in the url",
        "operationId" : "postInvasiveness",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "invasiveness",
          "description" : "InvasivenessVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvasivenessVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "invasiveness"
    },
    "/record/to_review/{id}/invasiveness" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of Invasiveness version with state \"to_review\"",
        "operationId" : "getToReviewInvasiveness",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InvasivenessVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "invasiveness"
    },
    "/record/approved_in_use/{id}/invasiveness" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the invasiveness version approved_in_use",
        "operationId" : "getLastApprovedInUseInvasiveness",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/InvasivenessVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "invasiveness"
    },
    "/record/approved_in_use/{id}/invasiveness/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a InvasivenessVersion state to approved_in_use",
        "operationId" : "setApprovedInUseInvasiveness",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "invasiveness"
    },
    "/record/{id}/more_information/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a MoreInformation element by record id and version",
        "operationId" : "getMoreInformation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MoreInformationVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "moreInformation"
    },
    "/record/{id}/more_information" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a MoreInformation element which belongs to record with id in the url",
        "operationId" : "postMoreInformation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "moreInformation",
          "description" : "MoreInformationVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MoreInformationVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "moreInformation"
    },
    "/record/to_review/{id}/more_information" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of MoreInformation version with state \"to_review\"",
        "operationId" : "getToReviewMoreInformation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MoreInformationVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "moreInformation"
    },
    "/record/approved_in_use/{id}/more_information" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the moreInformation version approved_in_use",
        "operationId" : "getLastApprovedInUseMoreInformation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MoreInformationVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "moreInformation"
    },
    "/record/approved_in_use/{id}/more_information/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a MoreInformationVersion state to approved_in_use",
        "operationId" : "setApprovedInUseMoreInformation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "moreInformation"
    },
    "/record/{id}/brief_description/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a BriefDescription element by record id and version",
        "operationId" : "getBriefDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BriefDescriptionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "briefDescription"
    },
    "/record/{id}/brief_description" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a BriefDescription element which belongs to record with id in the url",
        "operationId" : "postBriefDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "briefDescription",
          "description" : "BriefDescriptionVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BriefDescriptionVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "briefDescription"
    },
    "/record/to_review/{id}/brief_description" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of BriefDescription version with state \"to_review\"",
        "operationId" : "getToReviewBriefDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BriefDescriptionVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "briefDescription"
    },
    "/record/approved_in_use/{id}/brief_description" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the briefDescription version approved_in_use",
        "operationId" : "getLastApprovedInUseBriefDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BriefDescriptionVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "briefDescription"
    },
    "/record/approved_in_use/{id}/brief_description/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a BriefDescriptionVersion state to approved_in_use",
        "operationId" : "setApprovedInUseBriefDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "briefDescription"
    },
    "/record/{id}/ancillary_data/{version}" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a version of a AncillaryData element by record id and version",
        "operationId" : "getAncillaryData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AncillaryDataVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ancillaryData"
    },
    "/record/{id}/ancillary_data" : {
      "post" : {
        "tags" : [ "element" ],
        "description" : "Save a new version of a AncillaryData element which belongs to record with id in the url",
        "operationId" : "postAncillaryData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ancillaryData",
          "description" : "AncillaryDataVersion object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AncillaryDataVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ancillaryData"
    },
    "/record/to_review/{id}/ancillary_data" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns a list of AncillaryData version with state \"to_review\"",
        "operationId" : "getToReviewAncillaryData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AncillaryDataVersionList"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ancillaryData"
    },
    "/record/approved_in_use/{id}/ancillary_data" : {
      "get" : {
        "tags" : [ "element" ],
        "description" : "Returns the ancillaryData version approved_in_use",
        "operationId" : "getLastApprovedInUseAncillaryData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AncillaryDataVersion"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ancillaryData"
    },
    "/record/approved_in_use/{id}/ancillary_data/{version}" : {
      "put" : {
        "tags" : [ "element" ],
        "description" : "Update a AncillaryDataVersion state to approved_in_use",
        "operationId" : "setApprovedInUseAncillaryData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "ancillaryData"
    },
    "/list_records/{id}" : {
      "get" : {
        "tags" : [ "listRecords" ],
        "description" : "Returns a listRecords by id",
        "operationId" : "getListRecords",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ListRecords"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "listRecords"
    },
    "/list_records" : {
      "post" : {
        "tags" : [ "listRecords" ],
        "description" : "Save a new listRecords",
        "operationId" : "postListRecords",
        "parameters" : [ {
          "in" : "body",
          "name" : "listRecords",
          "description" : "ListRecords object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ListRecords"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "listRecords"
    },
    "/user/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "description" : "Returns a user by id",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "user"
    },
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "description" : "Save a new user",
        "operationId" : "postUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "description" : "User object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "user"
    },
    "/group/{id}" : {
      "get" : {
        "tags" : [ "group" ],
        "description" : "Returns a group by id",
        "operationId" : "getGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "group"
    },
    "/group" : {
      "post" : {
        "tags" : [ "group" ],
        "description" : "Save a new group",
        "operationId" : "postGroup",
        "parameters" : [ {
          "in" : "body",
          "name" : "group",
          "description" : "Group object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ResultResponse"
            }
          },
          "400" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "x-swagger-router-controller" : "group"
    },
    "/swagger" : {
      "x-swagger-pipe" : "swagger_raw"
    }
  },
  "definitions" : {
    "Record" : {
      "required" : [ "-id" ],
      "properties" : {
        "-id" : {
          "type" : "string"
        },
        "associatedParty" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Agent"
          }
        },
        "commonNamesAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommonNamesAtomized"
          }
        },
        "synonymsAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SynonymsAtomized"
          }
        },
        "taxonRecordName" : {
          "$ref" : "#/definitions/TaxonRecordName"
        },
        "lifeCycle" : {
          "$ref" : "#/definitions/LifeCycle"
        },
        "lifeForm" : {
          "$ref" : "#/definitions/LifeForm"
        },
        "identificationKeys" : {
          "$ref" : "#/definitions/IdentificationKeys"
        },
        "fullDescription" : {
          "$ref" : "#/definitions/FullDescription"
        },
        "abstract" : {
          "type" : "string"
        },
        "hierarchy" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Hierarchy"
          }
        },
        "reproduction" : {
          "$ref" : "#/definitions/Reproduction"
        },
        "annualCycles" : {
          "$ref" : "#/definitions/AnnualCycles"
        },
        "feeding" : {
          "$ref" : "#/definitions/Feeding"
        },
        "dispersal" : {
          "$ref" : "#/definitions/Dispersal"
        },
        "behavior" : {
          "$ref" : "#/definitions/Behavior"
        },
        "interactions" : {
          "$ref" : "#/definitions/Interactions"
        },
        "molecularData" : {
          "$ref" : "#/definitions/MolecularData"
        },
        "migratory" : {
          "$ref" : "#/definitions/Migratory"
        },
        "habitats" : {
          "$ref" : "#/definitions/Habitats"
        },
        "distribution" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Distribution"
          }
        },
        "territory" : {
          "$ref" : "#/definitions/Territory"
        },
        "populationBiology" : {
          "$ref" : "#/definitions/PopulationBiology"
        },
        "threatStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThreatStatus"
          }
        },
        "legislation" : {
          "$ref" : "#/definitions/Legislation"
        },
        "usesManagementAndConservation" : {
          "$ref" : "#/definitions/UsesManagementAndConservation"
        },
        "directThreats" : {
          "$ref" : "#/definitions/DirectThreats"
        },
        "endemicAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndemicAtomized"
          }
        },
        "references" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Reference"
          }
        },
        "environmentalEnvelope" : {
          "$ref" : "#/definitions/EnvironmentalEnvelope"
        },
        "ecologicalSignificance" : {
          "$ref" : "#/definitions/EcologicalSignificance"
        },
        "invasiveness" : {
          "$ref" : "#/definitions/Invasiveness"
        },
        "moreInformation" : {
          "type" : "string"
        }
      }
    },
    "RecordList" : {
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "creation_date" : {
          "type" : "string"
        },
        "scientificNameSimple" : {
          "type" : "string"
        },
        "update_date" : {
          "type" : "string"
        },
        "imageInfo" : {
          "$ref" : "#/definitions/ImageInfo"
        },
        "threatStatusValue" : {
          "type" : "string"
        },
        "commonNames" : {
          "$ref" : "#/definitions/CommonNames"
        }
      }
    },
    "ImageInfo" : {
      "properties" : {
        "mainImage" : {
          "type" : "string"
        },
        "thumbnailImage" : {
          "type" : "string"
        }
      }
    },
    "CommonNames" : {
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "MoreInformationVersion" : {
      "required" : [ "moreInformation" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "moreInformation" : {
          "type" : "string"
        }
      }
    },
    "AssociatedPartyVersion" : {
      "required" : [ "associatedParty", "id_user" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "associatedParty" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Agent"
          }
        }
      }
    },
    "DirectThreatsVersion" : {
      "required" : [ "directThreats", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "directThreats" : {
          "$ref" : "#/definitions/DirectThreats"
        }
      }
    },
    "TaxonRecordNameVersionList" : {
      "properties" : {
        "taxonRecordNameList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaxonRecordNameVersion"
          }
        }
      }
    },
    "AssociatedPartyVersionList" : {
      "properties" : {
        "associatedPartyList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AssociatedPartyVersion"
          }
        }
      }
    },
    "DirectThreatsVersionList" : {
      "properties" : {
        "directThreatsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DirectThreatsVersion"
          }
        }
      }
    },
    "MoreInformationVersionList" : {
      "properties" : {
        "moreInformationList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MoreInformationVersion"
          }
        }
      }
    },
    "SynonymsAtomizedVersionList" : {
      "properties" : {
        "synonymsAtomizedList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SynonymsAtomizedVersion"
          }
        }
      }
    },
    "CommonNamesAtomizedVersionList" : {
      "properties" : {
        "commonNamesAtomizedList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommonNamesAtomizedVersion"
          }
        }
      }
    },
    "HierarchyVersionList" : {
      "properties" : {
        "hierarchyList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HierarchyVersion"
          }
        }
      }
    },
    "BriefDescriptionVersionList" : {
      "properties" : {
        "briefDescriptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BriefDescriptionVersion"
          }
        }
      }
    },
    "AbstractVersionList" : {
      "properties" : {
        "abstractList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbstractVersion"
          }
        }
      }
    },
    "FullDescriptionVersionList" : {
      "properties" : {
        "fullDescriptionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FullDescriptionVersion"
          }
        }
      }
    },
    "IdentificationKeysVersionList" : {
      "properties" : {
        "identificationKeysList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdentificationKeysVersion"
          }
        }
      }
    },
    "LifeFormVersionList" : {
      "properties" : {
        "lifeFormList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LifeFormVersion"
          }
        }
      }
    },
    "LifeCycleVersionList" : {
      "properties" : {
        "lifeCycleList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LifeCycleVersion"
          }
        }
      }
    },
    "ReproductionVersionList" : {
      "properties" : {
        "reproductionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReproductionVersion"
          }
        }
      }
    },
    "AnnualCyclesVersionList" : {
      "properties" : {
        "annualCyclesList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnnualCyclesVersion"
          }
        }
      }
    },
    "MolecularDataVersionList" : {
      "properties" : {
        "molecularDataList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MolecularDataVersion"
          }
        }
      }
    },
    "MigratoryVersionList" : {
      "properties" : {
        "migratoryList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MigratoryVersion"
          }
        }
      }
    },
    "EcologicalSignificanceVersionList" : {
      "properties" : {
        "ecologicalSignificanceList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EcologicalSignificanceVersion"
          }
        }
      }
    },
    "EnvironmentalEnvelopeVersionList" : {
      "properties" : {
        "environmentalEnvelopeList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnvironmentalEnvelopeVersion"
          }
        }
      }
    },
    "InvasivenessVersionList" : {
      "properties" : {
        "invasivenessList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvasivenessVersion"
          }
        }
      }
    },
    "FeedingVersionList" : {
      "properties" : {
        "feedingList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedingVersion"
          }
        }
      }
    },
    "DispersalVersionList" : {
      "properties" : {
        "dispersalList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DispersalVersion"
          }
        }
      }
    },
    "BehaviorVersionList" : {
      "properties" : {
        "behaviorList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BehaviorVersion"
          }
        }
      }
    },
    "InteractionsVersionList" : {
      "properties" : {
        "interactionsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InteractionsVersion"
          }
        }
      }
    },
    "HabitatsVersionList" : {
      "properties" : {
        "habitatsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HabitatsVersion"
          }
        }
      }
    },
    "DistributionVersionList" : {
      "properties" : {
        "distributionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DistributionVersion"
          }
        }
      }
    },
    "TerritoryVersionList" : {
      "properties" : {
        "territoryList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TerritoryVersion"
          }
        }
      }
    },
    "PopulationBiologyVersionList" : {
      "properties" : {
        "populationBiologyList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PopulationBiologyVersion"
          }
        }
      }
    },
    "ThreatStatusVersionList" : {
      "properties" : {
        "threatStatusList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThreatStatusVersion"
          }
        }
      }
    },
    "LegislationVersionList" : {
      "properties" : {
        "legislationList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LegislationVersion"
          }
        }
      }
    },
    "UsesManagementAndConservationVersionList" : {
      "properties" : {
        "usesManagementAndConservationList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsesManagementAndConservationVersion"
          }
        }
      }
    },
    "AncillaryDataVersionList" : {
      "properties" : {
        "ancillaryDataList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryDataVersion"
          }
        }
      }
    },
    "ReferencesVersionList" : {
      "properties" : {
        "referencesList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReferencesVersion"
          }
        }
      }
    },
    "EndemicAtomizedVersionList" : {
      "properties" : {
        "endemicAtomizedList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndemicAtomizedVersion"
          }
        }
      }
    },
    "TaxonRecordNameVersion" : {
      "required" : [ "id_user", "taxonRecordName" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "taxonRecordName" : {
          "$ref" : "#/definitions/TaxonRecordName"
        }
      }
    },
    "SynonymsAtomizedVersion" : {
      "required" : [ "id_user", "synonymsAtomized" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "synonymsAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SynonymsAtomized"
          }
        }
      }
    },
    "CommonNamesAtomizedVersion" : {
      "required" : [ "commonNamesAtomized" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "commonNamesAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CommonNamesAtomized"
          }
        }
      }
    },
    "HierarchyVersion" : {
      "required" : [ "hierarchy", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "hierarchy" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Hierarchy"
          }
        }
      }
    },
    "BriefDescriptionVersion" : {
      "required" : [ "briefDescription", "id_user" ],
      "properties" : {
        "-id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "briefDescription" : {
          "type" : "string"
        }
      }
    },
    "AbstractVersion" : {
      "required" : [ "abstract", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "abstract" : {
          "type" : "string"
        }
      }
    },
    "FullDescriptionVersion" : {
      "required" : [ "fullDescription", "id_user" ],
      "properties" : {
        "-id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "fullDescription" : {
          "$ref" : "#/definitions/FullDescription"
        }
      }
    },
    "IdentificationKeysVersion" : {
      "required" : [ "id_user", "identificationKeys" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "identificationKeys" : {
          "$ref" : "#/definitions/IdentificationKeys"
        }
      }
    },
    "LifeFormVersion" : {
      "required" : [ "id_user", "lifeForm" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "lifeForm" : {
          "$ref" : "#/definitions/LifeForm"
        }
      }
    },
    "LifeCycleVersion" : {
      "required" : [ "id_user", "lifeCycle" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "lifeCycle" : {
          "$ref" : "#/definitions/LifeCycle"
        }
      }
    },
    "ReproductionVersion" : {
      "required" : [ "id_user", "reproduction" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "reproduction" : {
          "$ref" : "#/definitions/Reproduction"
        }
      }
    },
    "AnnualCyclesVersion" : {
      "required" : [ "annualCycles", "id_user" ],
      "properties" : {
        "-id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "annualCycles" : {
          "$ref" : "#/definitions/AnnualCycles"
        }
      }
    },
    "MolecularDataVersion" : {
      "required" : [ "id_user", "molecularData" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "molecularData" : {
          "$ref" : "#/definitions/MolecularData"
        }
      }
    },
    "MigratoryVersion" : {
      "required" : [ "id_user", "migratory" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "migratory" : {
          "$ref" : "#/definitions/Migratory"
        }
      }
    },
    "EcologicalSignificanceVersion" : {
      "required" : [ "ecologicalSignificance", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "ecologicalSignificance" : {
          "$ref" : "#/definitions/EcologicalSignificance"
        }
      }
    },
    "EnvironmentalEnvelopeVersion" : {
      "required" : [ "environmentalEnvelope", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "environmentalEnvelope" : {
          "$ref" : "#/definitions/EnvironmentalEnvelope"
        }
      }
    },
    "InvasivenessVersion" : {
      "required" : [ "id_user", "invasiveness" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "invasiveness" : {
          "$ref" : "#/definitions/Invasiveness"
        }
      }
    },
    "FeedingVersion" : {
      "required" : [ "feeding", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "feeding" : {
          "$ref" : "#/definitions/Feeding"
        }
      }
    },
    "DispersalVersion" : {
      "required" : [ "dispersal", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "dispersal" : {
          "$ref" : "#/definitions/Dispersal"
        }
      }
    },
    "BehaviorVersion" : {
      "required" : [ "behavior", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "behavior" : {
          "$ref" : "#/definitions/Behavior"
        }
      }
    },
    "InteractionsVersion" : {
      "required" : [ "id_user", "interactions" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "interactions" : {
          "$ref" : "#/definitions/Interactions"
        }
      }
    },
    "HabitatsVersion" : {
      "required" : [ "habitats", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "habitats" : {
          "$ref" : "#/definitions/Habitats"
        }
      }
    },
    "DistributionVersion" : {
      "required" : [ "distribution", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "distribution" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Distribution"
          }
        }
      }
    },
    "TerritoryVersion" : {
      "required" : [ "id_user", "territory" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "territory" : {
          "$ref" : "#/definitions/Territory"
        }
      }
    },
    "PopulationBiologyVersion" : {
      "required" : [ "id_user", "populationBiology" ],
      "properties" : {
        "-id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "populationBiology" : {
          "$ref" : "#/definitions/PopulationBiology"
        }
      }
    },
    "ThreatStatusVersion" : {
      "required" : [ "id_user", "threatStatus" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "threatStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThreatStatus"
          }
        }
      }
    },
    "LegislationVersion" : {
      "required" : [ "id_user", "legislation" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "legislation" : {
          "$ref" : "#/definitions/Legislation"
        }
      }
    },
    "UsesManagementAndConservationVersion" : {
      "required" : [ "id_user", "usesManagementAndConservation" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "usesManagementAndConservation" : {
          "$ref" : "#/definitions/UsesManagementAndConservation"
        }
      }
    },
    "ReferencesVersion" : {
      "required" : [ "id_user", "references" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "references" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Reference"
          }
        }
      }
    },
    "AncillaryDataVersion" : {
      "required" : [ "ancillaryData", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          },
          "minItems" : 1
        }
      }
    },
    "EndemicAtomizedVersion" : {
      "required" : [ "endemicAtomized", "id_user" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "id_record" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "id_user" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "element" : {
          "type" : "string"
        },
        "endemicAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndemicAtomized"
          }
        }
      }
    },
    "Agent" : {
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "organisation" : {
          "type" : "string"
        },
        "position" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "homepage" : {
          "type" : "string"
        },
        "personnelDirectory" : {
          "type" : "string"
        },
        "personnelIdentifier" : {
          "type" : "string"
        }
      }
    },
    "Invasiveness" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "invasivenessUnstructured" : {
          "type" : "string"
        },
        "invasivenessAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InvasivenessAtomized"
          }
        }
      }
    },
    "InvasivenessAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "origin" : {
          "type" : "string"
        },
        "presence" : {
          "type" : "string"
        },
        "persistence" : {
          "type" : "string"
        },
        "distribution" : {
          "type" : "string"
        },
        "harmful" : {
          "type" : "string"
        },
        "modified" : {
          "$ref" : "#/definitions/DateInterval"
        },
        "startValidateDate" : {
          "$ref" : "#/definitions/DateInterval"
        },
        "endValidateDate" : {
          "$ref" : "#/definitions/DateInterval"
        },
        "countryCode" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "county" : {
          "type" : "string"
        },
        "localityName" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "citation" : {
          "type" : "string"
        },
        "abundance" : {
          "type" : "string"
        },
        "trend" : {
          "type" : "string"
        },
        "rateOfSpread" : {
          "type" : "string"
        },
        "regulatoryListing" : {
          "type" : "string"
        },
        "memo" : {
          "type" : "string"
        },
        "localityType" : {
          "type" : "string"
        },
        "locationValue" : {
          "type" : "string"
        },
        "publicationDatePrecision" : {
          "type" : "string"
        },
        "whatImpact" : {
          "type" : "string"
        },
        "vector" : {
          "type" : "string"
        },
        "route" : {
          "type" : "string"
        },
        "target" : {
          "type" : "string"
        },
        "mechanism" : {
          "type" : "string"
        }
      }
    },
    "DateInterval" : {
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "default" : {
          "type" : "string"
        }
      }
    },
    "EcologicalSignificance" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "ecologicalSignificanceUnstructured" : {
          "type" : "string"
        },
        "ecologicalSignificanceAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EcologicalSignificanceAtomized"
          }
        }
      }
    },
    "EcologicalSignificanceAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        }
      }
    },
    "EnvironmentalEnvelope" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "environmentalEnvelopeUnstructured" : {
          "type" : "string"
        },
        "environmentalEnvelopeAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EnvironmentalEnvelopeAtomized"
          }
        }
      }
    },
    "EnvironmentalEnvelopeAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        }
      }
    },
    "EndemicAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "endemicTo" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "endemicIn" : {
          "type" : "string"
        }
      }
    },
    "DirectThreats" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "directThreatsUnstructured" : {
          "type" : "string"
        },
        "directThreatsAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DirectThreatsAtomized"
          }
        }
      }
    },
    "DirectThreatsAtomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        }
      }
    },
    "UsesManagementAndConservation" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "managementAndConservation" : {
          "$ref" : "#/definitions/ManagementAndConservation"
        },
        "usesAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UsesAtomized"
          }
        }
      }
    },
    "ManagementAndConservation" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "managementAndConservationUnstructured" : {
          "type" : "string"
        },
        "managementAndConservationAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ManagementAndConservationAtomized"
          }
        }
      }
    },
    "ManagementAndConservationAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "type" : {
          "type" : "string"
        },
        "objetive" : {
          "type" : "string"
        },
        "managementPlan" : {
          "type" : "string"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Actions"
          }
        },
        "humanAndEnviromentalrelevanc" : {
          "type" : "string"
        }
      }
    },
    "Actions" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "measurementOrFact" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MeasurementOrFact"
          }
        }
      }
    },
    "UsesAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "sourceOfInformation" : {
          "$ref" : "#/definitions/SourceOfInformation"
        },
        "useValue" : {
          "type" : "string"
        },
        "partUsed" : {
          "type" : "string"
        },
        "users" : {
          "type" : "string"
        },
        "organisms" : {
          "type" : "string"
        },
        "vernacularNameUseAnnotations" : {
          "type" : "string"
        },
        "productionDetails" : {
          "type" : "string"
        },
        "meansOfApplicationAdministration" : {
          "type" : "string"
        },
        "seasonOfAvailabilityUse" : {
          "type" : "string"
        },
        "conservationExplotationData" : {
          "type" : "string"
        },
        "useTypeAtomized" : {
          "type" : "string"
        },
        "economics" : {
          "type" : "string"
        },
        "ratingPopularity" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "string"
        },
        "potential" : {
          "type" : "string"
        },
        "useNotes" : {
          "type" : "string"
        }
      }
    },
    "SourceOfInformation" : {
      "properties" : {
        "references" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sourceOfInformationText" : {
          "type" : "string"
        }
      }
    },
    "Legislation" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "legislationUnstructured" : {
          "type" : "string"
        },
        "legislationAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LegislationAtomized"
          }
        }
      }
    },
    "LegislationAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "legislationName" : {
          "type" : "string"
        },
        "protectionLegalStatus" : {
          "type" : "string"
        },
        "legislationRead" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "norm" : {
          "type" : "string"
        },
        "appliesTo" : {
          "$ref" : "#/definitions/AppliesTo"
        }
      }
    },
    "ThreatStatus" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "threatStatusUnstructured" : {
          "type" : "string"
        },
        "threatStatusAtomized" : {
          "$ref" : "#/definitions/ThreatStatusAtomized"
        }
      }
    },
    "ThreatStatusAtomized" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "threatCategory" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "authority" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "appliesTo" : {
          "$ref" : "#/definitions/AppliesTo"
        },
        "apendiceCITES" : {
          "type" : "string"
        }
      }
    },
    "AppliesTo" : {
      "properties" : {
        "country" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "county" : {
          "type" : "string"
        },
        "municipality" : {
          "type" : "string"
        },
        "locality" : {
          "type" : "string"
        }
      }
    },
    "PopulationBiology" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "populationBiologyUnstructured" : {
          "type" : "string"
        },
        "populationBiologyAtomized" : {
          "$ref" : "#/definitions/PopulationBiologyAtomized"
        }
      }
    },
    "PopulationBiologyAtomized" : {
      "properties" : {
        "region" : {
          "$ref" : "#/definitions/Measurement"
        },
        "abundanceData" : {
          "$ref" : "#/definitions/Measurement"
        },
        "densityData" : {
          "$ref" : "#/definitions/Measurement"
        },
        "patternDistribution" : {
          "$ref" : "#/definitions/Measurement"
        },
        "size" : {
          "$ref" : "#/definitions/Measurement"
        },
        "sexRatio" : {
          "$ref" : "#/definitions/Measurement"
        },
        "fecundity" : {
          "$ref" : "#/definitions/Measurement"
        },
        "mortalityRate" : {
          "$ref" : "#/definitions/Measurement"
        },
        "birthRate" : {
          "$ref" : "#/definitions/Measurement"
        },
        "numberIndividualsPerObservation" : {
          "$ref" : "#/definitions/Measurement"
        },
        "averageDensity" : {
          "$ref" : "#/definitions/Measurement"
        },
        "populationTrend" : {
          "$ref" : "#/definitions/Measurement"
        },
        "recruitment" : {
          "$ref" : "#/definitions/Measurement"
        },
        "populationGrowthRate" : {
          "$ref" : "#/definitions/Measurement"
        },
        "emigration" : {
          "$ref" : "#/definitions/Measurement"
        },
        "immigration" : {
          "$ref" : "#/definitions/Measurement"
        },
        "descriptionLifeStages" : {
          "$ref" : "#/definitions/Measurement"
        },
        "proportionIndividualsPerStageLife" : {
          "$ref" : "#/definitions/Measurement"
        },
        "carryingCapacity" : {
          "$ref" : "#/definitions/Measurement"
        }
      }
    },
    "Measurement" : {
      "properties" : {
        "measurementValue" : {
          "type" : "string"
        }
      }
    },
    "Territory" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "territoryUnstructured" : {
          "type" : "string"
        },
        "territoryAtomized" : {
          "$ref" : "#/definitions/TerritoryAtomized"
        }
      }
    },
    "TerritoryAtomized" : {
      "properties" : {
        "extentOfOccurrence" : {
          "type" : "string"
        },
        "areaOfOccupancy" : {
          "type" : "string"
        }
      }
    },
    "Habitats" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "habitatUnstructured" : {
          "type" : "string"
        },
        "habitatAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HabitatAtomized"
          }
        }
      }
    },
    "HabitatAtomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "relatedTo" : {
          "type" : "string"
        }
      }
    },
    "Migratory" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "migratoryUnstructured" : {
          "type" : "string"
        },
        "additionalInformation" : {
          "type" : "string"
        },
        "dataObject" : {
          "type" : "string"
        },
        "migratoryAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MigratoryAtomized"
          }
        }
      }
    },
    "MigratoryAtomized" : {
      "properties" : {
        "causes" : {
          "type" : "string"
        },
        "patterns" : {
          "type" : "string"
        },
        "routes" : {
          "type" : "string"
        },
        "season" : {
          "type" : "string"
        }
      }
    },
    "MolecularData" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "molecularDataUnstructured" : {
          "type" : "string"
        },
        "molecularDataAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MolecularDataAtomized"
          }
        }
      }
    },
    "MolecularDataAtomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MolecularMeasurementOrFact"
        },
        "relatedTo" : {
          "type" : "string"
        }
      }
    },
    "MolecularMeasurementOrFact" : {
      "properties" : {
        "relatedTo" : {
          "type" : "string"
        },
        "MeasurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        }
      }
    },
    "Interactions" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "interactionsUnstructured" : {
          "type" : "string"
        },
        "interactionsAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InteractionsAtomized"
          }
        }
      }
    },
    "InteractionsAtomized" : {
      "properties" : {
        "interactionSpecies" : {
          "type" : "string"
        },
        "interactionSpeciesType" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Atomized"
          }
        },
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        }
      }
    },
    "Behavior" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "behaviorUnstructured" : {
          "type" : "string"
        },
        "behaviorAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Atomized"
          }
        }
      }
    },
    "Dispersal" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "dispersalUnstructured" : {
          "type" : "string"
        },
        "dispersalAtomized" : {
          "$ref" : "#/definitions/DispersalAtomized"
        }
      }
    },
    "DispersalAtomized" : {
      "properties" : {
        "purpose" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "structureDispersed" : {
          "type" : "string"
        },
        "distance" : {
          "$ref" : "#/definitions/Distance"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "Distance" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "Feeding" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "feedingUnstructured" : {
          "type" : "string"
        },
        "feedingAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FeedingAtomized"
          }
        }
      }
    },
    "FeedingAtomized" : {
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "thropic" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Thropic"
          }
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "Thropic" : {
      "properties" : {
        "strategy" : {
          "type" : "string"
        }
      }
    },
    "Hierarchy" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "classification" : {
          "type" : "string"
        },
        "recommended:" : {
          "type" : "string"
        },
        "kingdom" : {
          "type" : "string"
        },
        "phylum" : {
          "type" : "string"
        },
        "classHierarchy" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        },
        "family" : {
          "type" : "string"
        },
        "genus" : {
          "type" : "string"
        },
        "subgenus" : {
          "type" : "string"
        },
        "taxonRank" : {
          "type" : "string"
        },
        "specificEpithet" : {
          "type" : "string"
        },
        "infraspecificEpithet" : {
          "type" : "string"
        },
        "higherClassification" : {
          "type" : "string"
        },
        "parentTaxon" : {
          "type" : "string"
        }
      }
    },
    "AnnualCycles" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "annualCycleUnstructured" : {
          "type" : "string"
        },
        "annualCycleAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AnnualCycleAtomized"
          }
        }
      }
    },
    "AnnualCycleAtomized" : {
      "properties" : {
        "event" : {
          "type" : "string"
        },
        "startTimeInterval" : {
          "type" : "string"
        },
        "endTimeInterval" : {
          "type" : "string"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "FullDescription" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "fullDescriptionUnstructured" : {
          "type" : "string"
        },
        "fullDescriptionAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FullDescriptionAtomized"
          }
        }
      }
    },
    "FullDescriptionAtomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "Reproduction" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "reproductionUnstructured" : {
          "type" : "string"
        },
        "reproductionAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Atomized"
          }
        }
      }
    },
    "Atomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "IdentificationKeys" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "keys" : {
          "type" : "string"
        }
      }
    },
    "LifeCycle" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "lifeCycleAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LifeCycleAtomized"
          }
        }
      }
    },
    "LifeCycleAtomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "LifeForm" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "lifeFormAtomized" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LifeFormAtomized"
          }
        }
      }
    },
    "LifeFormAtomized" : {
      "properties" : {
        "measurementOrFact" : {
          "$ref" : "#/definitions/MeasurementOrFact"
        },
        "ancillaryData" : {
          "$ref" : "#/definitions/AncillaryData"
        }
      }
    },
    "MeasurementOrFact" : {
      "properties" : {
        "measurementID" : {
          "type" : "string"
        },
        "measurementType" : {
          "type" : "string"
        },
        "measurementValue" : {
          "type" : "string"
        },
        "measurementAccuracy" : {
          "type" : "string"
        },
        "measurementUnit" : {
          "type" : "string"
        },
        "measurementDeterminedDate" : {
          "type" : "string"
        },
        "measurementDeterminedBy" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "measurementMethod" : {
          "type" : "string"
        },
        "measurementRemarks" : {
          "type" : "string"
        },
        "relatedTo" : {
          "type" : "string"
        }
      }
    },
    "CommonNamesAtomized" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "synonymStatus" : {
          "type" : "string"
        },
        "usedIn" : {
          "$ref" : "#/definitions/Distribution"
        },
        "usedBy" : {
          "type" : "string"
        }
      }
    },
    "Distribution" : {
      "properties" : {
        "distributionScope" : {
          "$ref" : "#/definitions/DistributionScope"
        },
        "temporalCoverage" : {
          "$ref" : "#/definitions/TemporalCoverage"
        },
        "distributionAtomizedBranch" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DistributionScope" : {
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        }
      }
    },
    "TemporalCoverage" : {
      "properties" : {
        "startDate" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string"
        }
      }
    },
    "AncillaryData" : {
      "required" : [ "dataType" ],
      "properties" : {
        "dataType" : {
          "type" : "string"
        },
        "mimeType" : {
          "type" : "string"
        },
        "agent" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Agent"
          }
        },
        "created" : {
          "type" : "string"
        },
        "modified" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "license" : {
          "type" : "string"
        },
        "rights" : {
          "type" : "string"
        },
        "rightsHolder" : {
          "type" : "string"
        },
        "bibliographicCitation" : {
          "type" : "string"
        },
        "audience" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "source" : {
          "type" : "string"
        },
        "subject" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string"
        },
        "mediaURL" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "thumbnailURL" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "geoPoint" : {
          "type" : "string"
        },
        "additionalInformation" : {
          "type" : "string"
        },
        "dataObject" : {
          "type" : "string"
        },
        "reference" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Reference"
          }
        }
      }
    },
    "Reference" : {
      "properties" : {
        "profile_id" : {
          "type" : "string"
        },
        "group_id" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "last_modified" : {
          "type" : "string"
        },
        "identifiers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "abstract" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "year" : {
          "type" : "string"
        },
        "volume" : {
          "type" : "string"
        },
        "issue" : {
          "type" : "string"
        },
        "pages" : {
          "type" : "string"
        },
        "series" : {
          "type" : "string"
        },
        "chapter" : {
          "type" : "string"
        },
        "websites" : {
          "type" : "string"
        },
        "accessed" : {
          "type" : "string"
        },
        "publisher" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "edition" : {
          "type" : "string"
        },
        "institution" : {
          "type" : "string"
        },
        "editors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "keywords" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "doi" : {
          "type" : "string"
        },
        "isbn" : {
          "type" : "string"
        },
        "issn" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        },
        "recordId" : {
          "type" : "string"
        }
      }
    },
    "SynonymsAtomized" : {
      "properties" : {
        "synonymStatus" : {
          "type" : "string"
        },
        "synonymName" : {
          "$ref" : "#/definitions/ScientificName"
        },
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        }
      }
    },
    "ScientificName" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          }
        },
        "attributes" : {
          "$ref" : "#/definitions/Attributes"
        },
        "simple" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        },
        "canonicalName" : {
          "$ref" : "#/definitions/CanonicalName"
        },
        "canonicalAuthorship" : {
          "$ref" : "#/definitions/CanonicalAuthorship"
        },
        "specialAuthorship" : {
          "$ref" : "#/definitions/SpecialAuthorship"
        },
        "publishedln" : {
          "$ref" : "#/definitions/Publishedln"
        },
        "year" : {
          "type" : "string"
        },
        "microReference" : {
          "type" : "string"
        },
        "typificacion" : {
          "$ref" : "#/definitions/Typificacion"
        },
        "typeNameEntity" : {
          "$ref" : "#/definitions/TypeNameEntity"
        },
        "spellingCorrentionOf" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "basionym" : {
          "$ref" : "#/definitions/ScientificNameAux"
        },
        "basedOn" : {
          "$ref" : "#/definitions/ScientificNameAux"
        },
        "conservedAgainst" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "laterHomonymOf" : {
          "$ref" : "#/definitions/ScientificNameAux"
        },
        "sanctioned" : {
          "$ref" : "#/definitions/ScientificNameAux"
        },
        "replacementNameFor" : {
          "$ref" : "#/definitions/ScientificNameAux"
        },
        "publicationStatus" : {
          "$ref" : "#/definitions/ScientificNameAux"
        },
        "providerLink" : {
          "type" : "string"
        },
        "providerSpecificData" : {
          "$ref" : "#/definitions/ProviderSpecificData"
        }
      }
    },
    "Attributes" : {
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "isAnamorphic" : {
          "type" : "boolean"
        },
        "nomenclaturalCode" : {
          "type" : "string"
        }
      }
    },
    "CanonicalName" : {
      "properties" : {
        "simple" : {
          "type" : "string"
        },
        "uninomial" : {
          "type" : "string"
        },
        "genus" : {
          "$ref" : "#/definitions/Genus"
        },
        "epithet" : {
          "$ref" : "#/definitions/Epithet"
        }
      }
    },
    "CanonicalAuthorship" : {
      "properties" : {
        "simple" : {
          "type" : "string"
        },
        "authorship" : {
          "$ref" : "#/definitions/Authorship"
        }
      }
    },
    "SpecialAuthorship" : {
      "properties" : {
        "basionymAuthorship" : {
          "$ref" : "#/definitions/BasionymAuthorship"
        }
      }
    },
    "Publishedln" : {
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "datatype" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "Typificacion" : {
      "properties" : {
        "simple" : {
          "type" : "string"
        },
        "typeVoucherEntity" : {
          "$ref" : "#/definitions/TypeVoucherEntity"
        }
      }
    },
    "TypeNameEntity" : {
      "properties" : {
        "nameReference" : {
          "$ref" : "#/definitions/NameReference"
        }
      }
    },
    "ScientificNameAux" : {
      "properties" : {
        "ruleConsidered" : {
          "type" : "string"
        },
        "note" : {
          "type" : "string"
        },
        "relatedName" : {
          "$ref" : "#/definitions/RelatedNamePublished"
        },
        "publishedln" : {
          "$ref" : "#/definitions/RelatedNamePublished"
        },
        "microReference" : {
          "type" : "string"
        }
      }
    },
    "RelatedNamePublished" : {
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "datatype" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "NameReference" : {
      "properties" : {
        "identifier" : {
          "type" : "string"
        },
        "datatype" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        }
      }
    },
    "TypeVoucherEntity" : {
      "properties" : {
        "voucherReference" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "lectotypePublicationVoucher" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "lectotypeMicroReferenceVoucher" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "typeOfType" : {
          "type" : "string"
        }
      }
    },
    "BasionymAuthorship" : {
      "properties" : {
        "simple" : {
          "type" : "string"
        },
        "year" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "combinationAuthorship" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Authorship" : {
      "properties" : {
        "simple" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Genus" : {
      "properties" : {
        "ref" : {
          "type" : "string"
        },
        "linkType" : {
          "type" : "string"
        }
      }
    },
    "Epithet" : {
      "properties" : {
        "infragenericEpithe" : {
          "type" : "string"
        },
        "specificEpithet" : {
          "type" : "string"
        },
        "infraspecificEpithet" : {
          "type" : "string"
        }
      }
    },
    "ProviderSpecificData" : {
      "properties" : {
        "anyOne" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "anyTwo" : {
          "type" : "string"
        }
      }
    },
    "TaxonRecordName" : {
      "properties" : {
        "ancillaryData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AncillaryData"
          },
          "minItems" : 1
        },
        "scientificName" : {
          "$ref" : "#/definitions/ScientificName"
        }
      }
    },
    "ListRecords" : {
      "required" : [ "id_user", "records" ],
      "properties" : {
        "id_user" : {
          "type" : "string"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "created" : {
          "type" : "string"
        },
        "updated" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "group" : {
          "type" : "string"
        }
      }
    },
    "Group" : {
      "required" : [ "admins", "users" ],
      "properties" : {
        "users" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "admins" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "image" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "records" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "required" : [ "id_user" ],
      "properties" : {
        "id_user" : {
          "type" : "string",
          "pattern" : "^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"
        }
      }
    },
    "ResultResponse" : {
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    },
    "ErrorResponse" : {
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    }
  }
}